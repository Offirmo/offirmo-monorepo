{"mappings":"C,A,S,C,C,C,C,C,C,C,C,C,E,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,A,Y,O,C,C,E,E,C,C,E,C,E,E,K,E,C,E,E,A,a,O,Q,A,Y,O,O,O,E,O,O,C,I,C,Q,S,E,C,C,C,E,G,C,C,C,E,C,C,G,C,C,C,E,C,C,I,E,A,Y,O,C,C,E,E,C,C,E,C,G,C,G,E,O,E,E,C,G,G,E,O,E,E,C,G,G,G,A,U,O,E,O,E,G,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,O,C,S,C,E,I,E,C,C,E,C,E,C,E,C,O,A,M,E,E,C,E,E,K,C,C,E,I,E,C,C,E,C,I,E,M,C,G,C,C,E,C,E,C,I,C,E,O,C,E,E,E,O,C,I,C,C,O,C,C,E,C,O,C,S,E,C,E,I,E,E,O,C,G,M,A,C,I,E,C,E,E,E,C,C,E,e,C,C,E,E,M,C,S,C,E,I,C,E,C,E,I,C,M,C,E,I,C,O,C,C,C,E,E,O,C,E,E,K,C,E,E,M,C,E,E,Q,C,S,C,C,C,E,C,C,E,C,C,S,C,C,C,E,E,O,C,C,E,C,E,A,E,O,c,C,E,O,C,I,W,O,C,C,E,A,C,G,C,C,E,C,E,I,I,E,E,E,E,M,C,I,E,C,C,E,C,E,C,M,C,S,C,C,C,C,C,E,I,E,E,kD,E,iB,C,GCAA,IAAA,EAAA,EAAA,cAAA,EAAA,SAAA,CAAA,EAAA,GACA,IAAA,EAAA,EAAA,aAAA,EAAA,SAAA,CAAA,EAAA,GACA,IAAA,EAAA,EAAA,aAAA,EAAA,SAAA,CAAA,EAAA,GACA,IAAA,EAAA,EAAA,cAAA,EAAA,SAAA,CAAA,EAAA,E,E,C,a,Q,Y,Q,Y,Q,a,Q,iD,O,E,C,M,C,S,C,C,C,C,C,E,A,E,kD,iB,C,E,E,C,iD,O,E,C,Q,C,S,C,C,C,C,C,E,I,E,E,kD,E,iB,C,GEqBA,EAAA,MAAA,CAAA,EAAA,aAAA,IACC,GADD,EAAA,MAAA,CAAA,EAAA,6BAAA,IAEC,GAzBD,IAAA,EAAA,EAAA,aAIA,SAAS,IACR,IAAM,EAAc,WAOpB,OALK,EAAY,iBAAiB,EAEjC,CAAA,EAAY,iBAAiB,CAAG,AAAA,CAAA,EAAA,EAAA,UAAU,AAAV,GAAhC,EAG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","sources":["<anon>","3-advanced--multi/soft-execution-context/src/index.ts","3-advanced--multi/soft-execution-context/src/types.ts","3-advanced--multi/soft-execution-context/src/root.ts","3-advanced--multi/soft-execution-context/src/core.ts","3-advanced--multi/soft-execution-context/src/consts.ts","3-advanced--multi/soft-execution-context/src/root-prototype.js","node_modules/emittery/index.js","node_modules/emittery/maps.js","3-advanced--multi/soft-execution-context/src/state.js","3-advanced--multi/soft-execution-context/src/plugins/index.js","3-advanced--multi/soft-execution-context/src/plugins/logical-stack/index.js","3-advanced--multi/soft-execution-context/src/plugins/logical-stack/consts.js","3-advanced--multi/soft-execution-context/src/plugins/logical-stack/state.js","3-advanced--multi/soft-execution-context/src/utils.js","3-advanced--multi/soft-execution-context/src/plugins/dependency-injection/index.js","3-advanced--multi/soft-execution-context/src/plugins/dependency-injection/state.js","3-advanced--multi/soft-execution-context/src/plugins/error-handling/index.js","1-stdlib/promise-try/src/index.ts","1-stdlib/timestamps/src/index.ts","2-foundation/utils--error/src/index.ts","2-foundation/utils--error/src/types.ts","2-foundation/utils--error/src/fields.ts","2-foundation/utils--error/src/util--create.ts","2-foundation/utils--error/src/util--normalize.ts","3-advanced--multi/soft-execution-context/src/plugins/error-handling/state.js","3-advanced--multi/soft-execution-context/src/plugins/error-handling/catch-factory.js","3-advanced--multi/soft-execution-context/src/plugins/analytics/index.js","3-advanced--multi/soft-execution-context/src/plugins/analytics/state.js","3-advanced--multi/soft-execution-context/src/common.ts","node_modules/process/browser.js"],"sourcesContent":["// modules are defined as an array\n// [ module function, map of requires ]\n//\n// map of requires is short require name -> numeric require\n//\n// anything defined in a previous bundle is accessed via the\n// orig method which is the require for previous bundles\n\n(function (modules, entry, mainEntry, parcelRequireName, globalName) {\n  /* eslint-disable no-undef */\n  var globalObject =\n    typeof globalThis !== 'undefined'\n      ? globalThis\n      : typeof self !== 'undefined'\n      ? self\n      : typeof window !== 'undefined'\n      ? window\n      : typeof global !== 'undefined'\n      ? global\n      : {};\n  /* eslint-enable no-undef */\n\n  // Save the require from previous bundle to this closure if any\n  var previousRequire =\n    typeof globalObject[parcelRequireName] === 'function' &&\n    globalObject[parcelRequireName];\n\n  var cache = previousRequire.cache || {};\n  // Do not use `require` to prevent Webpack from trying to bundle this call\n  var nodeRequire =\n    typeof module !== 'undefined' &&\n    typeof module.require === 'function' &&\n    module.require.bind(module);\n\n  function newRequire(name, jumped) {\n    if (!cache[name]) {\n      if (!modules[name]) {\n        // if we cannot find the module within our internal map or\n        // cache jump to the current global require ie. the last bundle\n        // that was added to the page.\n        var currentRequire =\n          typeof globalObject[parcelRequireName] === 'function' &&\n          globalObject[parcelRequireName];\n        if (!jumped && currentRequire) {\n          return currentRequire(name, true);\n        }\n\n        // If there are other bundles on this page the require from the\n        // previous one is saved to 'previousRequire'. Repeat this as\n        // many times as there are bundles until the module is found or\n        // we exhaust the require chain.\n        if (previousRequire) {\n          return previousRequire(name, true);\n        }\n\n        // Try the node require function if it exists.\n        if (nodeRequire && typeof name === 'string') {\n          return nodeRequire(name);\n        }\n\n        var err = new Error(\"Cannot find module '\" + name + \"'\");\n        err.code = 'MODULE_NOT_FOUND';\n        throw err;\n      }\n\n      localRequire.resolve = resolve;\n      localRequire.cache = {};\n\n      var module = (cache[name] = new newRequire.Module(name));\n\n      modules[name][0].call(\n        module.exports,\n        localRequire,\n        module,\n        module.exports,\n        this\n      );\n    }\n\n    return cache[name].exports;\n\n    function localRequire(x) {\n      var res = localRequire.resolve(x);\n      return res === false ? {} : newRequire(res);\n    }\n\n    function resolve(x) {\n      var id = modules[name][1][x];\n      return id != null ? id : x;\n    }\n  }\n\n  function Module(moduleName) {\n    this.id = moduleName;\n    this.bundle = newRequire;\n    this.exports = {};\n  }\n\n  newRequire.isParcelRequire = true;\n  newRequire.Module = Module;\n  newRequire.modules = modules;\n  newRequire.cache = cache;\n  newRequire.parent = previousRequire;\n  newRequire.register = function (id, exports) {\n    modules[id] = [\n      function (require, module) {\n        module.exports = exports;\n      },\n      {},\n    ];\n  };\n\n  Object.defineProperty(newRequire, 'root', {\n    get: function () {\n      return globalObject[parcelRequireName];\n    },\n  });\n\n  globalObject[parcelRequireName] = newRequire;\n\n  for (var i = 0; i < entry.length; i++) {\n    newRequire(entry[i]);\n  }\n\n  if (mainEntry) {\n    // Expose entry point to Node, AMD or browser globals\n    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js\n    var mainExports = newRequire(mainEntry);\n\n    // CommonJS\n    if (typeof exports === 'object' && typeof module !== 'undefined') {\n      module.exports = mainExports;\n\n      // RequireJS\n    } else if (typeof define === 'function' && define.amd) {\n      define(function () {\n        return mainExports;\n      });\n\n      // <script>\n    } else if (globalName) {\n      this[globalName] = mainExports;\n    }\n  }\n})({\"iE00d\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nvar _typesJs = require(\"./types.js\");\nparcelHelpers.exportAll(_typesJs, exports);\nvar _rootJs = require(\"./root.js\");\nparcelHelpers.exportAll(_rootJs, exports);\nvar _coreJs = require(\"./core.js\");\nparcelHelpers.exportAll(_coreJs, exports);\nvar _utilsJs = require(\"./utils.js\");\nparcelHelpers.exportAll(_utilsJs, exports);\n\n},{\"./types.js\":\"bvYFo\",\"./root.js\":\"7vvvk\",\"./core.js\":\"8hp7b\",\"./utils.js\":\"5oqdL\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"fCxzd\"}],\"bvYFo\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"fCxzd\"}],\"7vvvk\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\n/////////////////////\nparcelHelpers.export(exports, \"getRootSXC\", ()=>getRootSXC);\nparcelHelpers.export(exports, \"_test_only__reset_root_SXC\", ()=>_test_only__reset_root_SXC);\nvar _coreJs = require(\"./core.js\");\n/////////////////////\nfunction getRootSXC() {\n    const global_this = globalThis;\n    if (!global_this.__global_root_sec) //console.log(`[${LIB}] Creating root context…`)\n    global_this.__global_root_sec = (0, _coreJs._createSXC)();\n    return global_this.__global_root_sec;\n}\nfunction _test_only__reset_root_SXC() {\n    const global_this = globalThis;\n    delete global_this.__global_root_sec;\n}\n\n},{\"./core.js\":\"8hp7b\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"fCxzd\"}],\"8hp7b\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\n/////////////////////////////////////////////////\nparcelHelpers.export(exports, \"isSXC\", ()=>isSXC);\nparcelHelpers.export(exports, \"_createSXC\", ()=>_createSXC);\nvar _constsJs = require(\"./consts.js\");\nvar _rootPrototypeJs = require(\"./root-prototype.js\");\nvar _stateJs = require(\"./state.js\");\nvar _indexJs = require(\"./plugins/index.js\");\nvar _commonJs = require(\"./common.js\");\n/////////////////////////////////////////////////\n(0, _rootPrototypeJs.ROOT_PROTOTYPE).createChild = function createChild(args) {\n    return _createSXC({\n        ...args,\n        parent: this\n    });\n};\n(0, _indexJs.PLUGINS).forEach((PLUGIN)=>{\n    PLUGIN.augment((0, _rootPrototypeJs.ROOT_PROTOTYPE));\n});\n/////////////////////////////////////////////////\nfunction isSXC(SXC) {\n    return SXC && SXC[0, _constsJs.INTERNAL_PROP];\n}\n// this function should normally NOT be called directly\n// use getRootSXC() or make a getLibSXC()\nfunction _createSXC(args = {}) {\n    /////// PARAMS ///////\n    if (args.parent && !isSXC(args.parent)) throw new Error(`${(0, _constsJs.LIB)}\\u{203A}createSXC() argument error: parent must be a valid SXC!`);\n    let unhandled_args = Object.keys(args);\n    const SXC = Object.create((0, _rootPrototypeJs.ROOT_PROTOTYPE));\n    /////// STATE ///////\n    const parent_state = args.parent ? args.parent[0, _constsJs.INTERNAL_PROP] : undefined;\n    let state = _stateJs.create(parent_state);\n    unhandled_args = unhandled_args.filter((arg)=>arg !== \"parent\");\n    (0, _indexJs.PLUGINS).forEach((PLUGIN)=>{\n        state = _stateJs.activate_plugin(state, PLUGIN);\n    });\n    SXC[0, _constsJs.INTERNAL_PROP] = state;\n    // auto injections\n    if (!args.parent) {\n        SXC.injectDependencies({\n            logger: console\n        });\n        (0, _commonJs.decorateWithDetectedEnv)(SXC);\n    }\n    SXC.injectDependencies({\n        SXC\n    });\n    //console.log('createSXC', SXC, args.parent)\n    // Here we could send an event on the SXC bus. No usage for now.\n    // Here we could have lifecycle methods. No usage for now.\n    if (unhandled_args.length) throw new Error(`${(0, _constsJs.LIB)}\\u{203A}createSXC() argument error: unknown args: [${unhandled_args.join(\",\")}]!`);\n    /////////////////////\n    return SXC;\n}\n\n},{\"./consts.js\":\"8PAoy\",\"./root-prototype.js\":\"dl3H9\",\"./state.js\":\"29BvI\",\"./plugins/index.js\":\"kfnse\",\"./common.js\":\"cMbf5\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"fCxzd\"}],\"8PAoy\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\n/////////////////////////////////////////////////\nparcelHelpers.export(exports, \"LIB\", ()=>LIB);\nparcelHelpers.export(exports, \"INTERNAL_PROP\", ()=>INTERNAL_PROP);\nconst LIB = \"soft-execution-context\";\nconst INTERNAL_PROP = \"_SXC\";\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"fCxzd\"}],\"dl3H9\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\n/////////////////////\nparcelHelpers.export(exports, \"ROOT_PROTOTYPE\", ()=>ROOT_PROTOTYPE);\nvar _emittery = require(\"emittery\");\nvar _emitteryDefault = parcelHelpers.interopDefault(_emittery);\n/////////////////////\nconst ROOT_PROTOTYPE = Object.create(null);\n// global bus shared by all SXCs\n// TODO should be injected instead?\nROOT_PROTOTYPE.emitter = new (0, _emitteryDefault.default)();\n// common functions\n// because we often set the same details\nROOT_PROTOTYPE.setAnalyticsAndErrorDetails = function setAnalyticsAndErrorDetails(details = {}) {\n    const SXC = this;\n    return SXC.setAnalyticsDetails(details).setErrorDetails(details);\n};\n\n},{\"emittery\":\"2v98T\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"fCxzd\"}],\"2v98T\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nvar _mapsJs = require(\"./maps.js\");\nconst anyProducer = Symbol(\"anyProducer\");\nconst resolvedPromise = Promise.resolve();\n// Define symbols for \"meta\" events.\nconst listenerAdded = Symbol(\"listenerAdded\");\nconst listenerRemoved = Symbol(\"listenerRemoved\");\nlet canEmitMetaEvents = false;\nlet isGlobalDebugEnabled = false;\nconst isEventKeyType = (key)=>typeof key === \"string\" || typeof key === \"symbol\" || typeof key === \"number\";\nfunction assertEventName(eventName) {\n    if (!isEventKeyType(eventName)) throw new TypeError(\"`eventName` must be a string, symbol, or number\");\n}\nfunction assertListener(listener) {\n    if (typeof listener !== \"function\") throw new TypeError(\"listener must be a function\");\n}\nfunction getListeners(instance, eventName) {\n    const events = (0, _mapsJs.eventsMap).get(instance);\n    if (!events.has(eventName)) return;\n    return events.get(eventName);\n}\nfunction getEventProducers(instance, eventName) {\n    const key = isEventKeyType(eventName) ? eventName : anyProducer;\n    const producers = (0, _mapsJs.producersMap).get(instance);\n    if (!producers.has(key)) return;\n    return producers.get(key);\n}\nfunction enqueueProducers(instance, eventName, eventData) {\n    const producers = (0, _mapsJs.producersMap).get(instance);\n    if (producers.has(eventName)) for (const producer of producers.get(eventName))producer.enqueue(eventData);\n    if (producers.has(anyProducer)) {\n        const item = Promise.all([\n            eventName,\n            eventData\n        ]);\n        for (const producer of producers.get(anyProducer))producer.enqueue(item);\n    }\n}\nfunction iterator(instance, eventNames) {\n    eventNames = Array.isArray(eventNames) ? eventNames : [\n        eventNames\n    ];\n    let isFinished = false;\n    let flush = ()=>{};\n    let queue = [];\n    const producer = {\n        enqueue (item) {\n            queue.push(item);\n            flush();\n        },\n        finish () {\n            isFinished = true;\n            flush();\n        }\n    };\n    for (const eventName of eventNames){\n        let set = getEventProducers(instance, eventName);\n        if (!set) {\n            set = new Set();\n            const producers = (0, _mapsJs.producersMap).get(instance);\n            producers.set(eventName, set);\n        }\n        set.add(producer);\n    }\n    return {\n        async next () {\n            if (!queue) return {\n                done: true\n            };\n            if (queue.length === 0) {\n                if (isFinished) {\n                    queue = undefined;\n                    return this.next();\n                }\n                await new Promise((resolve)=>{\n                    flush = resolve;\n                });\n                return this.next();\n            }\n            return {\n                done: false,\n                value: await queue.shift()\n            };\n        },\n        async return (value) {\n            queue = undefined;\n            for (const eventName of eventNames){\n                const set = getEventProducers(instance, eventName);\n                if (set) {\n                    set.delete(producer);\n                    if (set.size === 0) {\n                        const producers = (0, _mapsJs.producersMap).get(instance);\n                        producers.delete(eventName);\n                    }\n                }\n            }\n            flush();\n            return arguments.length > 0 ? {\n                done: true,\n                value: await value\n            } : {\n                done: true\n            };\n        },\n        [Symbol.asyncIterator] () {\n            return this;\n        }\n    };\n}\nfunction defaultMethodNamesOrAssert(methodNames) {\n    if (methodNames === undefined) return allEmitteryMethods;\n    if (!Array.isArray(methodNames)) throw new TypeError(\"`methodNames` must be an array of strings\");\n    for (const methodName of methodNames)if (!allEmitteryMethods.includes(methodName)) {\n        if (typeof methodName !== \"string\") throw new TypeError(\"`methodNames` element must be a string\");\n        throw new Error(`${methodName} is not Emittery method`);\n    }\n    return methodNames;\n}\nconst isMetaEvent = (eventName)=>eventName === listenerAdded || eventName === listenerRemoved;\nfunction emitMetaEvent(emitter, eventName, eventData) {\n    if (isMetaEvent(eventName)) try {\n        canEmitMetaEvents = true;\n        emitter.emit(eventName, eventData);\n    } finally{\n        canEmitMetaEvents = false;\n    }\n}\nclass Emittery {\n    static mixin(emitteryPropertyName, methodNames) {\n        methodNames = defaultMethodNamesOrAssert(methodNames);\n        return (target)=>{\n            if (typeof target !== \"function\") throw new TypeError(\"`target` must be function\");\n            for (const methodName of methodNames){\n                if (target.prototype[methodName] !== undefined) throw new Error(`The property \\`${methodName}\\` already exists on \\`target\\``);\n            }\n            function getEmitteryProperty() {\n                Object.defineProperty(this, emitteryPropertyName, {\n                    enumerable: false,\n                    value: new Emittery()\n                });\n                return this[emitteryPropertyName];\n            }\n            Object.defineProperty(target.prototype, emitteryPropertyName, {\n                enumerable: false,\n                get: getEmitteryProperty\n            });\n            const emitteryMethodCaller = (methodName)=>function(...args) {\n                    return this[emitteryPropertyName][methodName](...args);\n                };\n            for (const methodName of methodNames)Object.defineProperty(target.prototype, methodName, {\n                enumerable: false,\n                value: emitteryMethodCaller(methodName)\n            });\n            return target;\n        };\n    }\n    static get isDebugEnabled() {\n        // In a browser environment, `globalThis.process` can potentially reference a DOM Element with a `#process` ID,\n        // so instead of just type checking `globalThis.process`, we need to make sure that `globalThis.process.env` exists.\n        // eslint-disable-next-line n/prefer-global/process\n        if (typeof globalThis.process?.env !== \"object\") return isGlobalDebugEnabled;\n        // eslint-disable-next-line n/prefer-global/process\n        const { env } = globalThis.process ?? {\n            env: {}\n        };\n        return env.DEBUG === \"emittery\" || env.DEBUG === \"*\" || isGlobalDebugEnabled;\n    }\n    static set isDebugEnabled(newValue) {\n        isGlobalDebugEnabled = newValue;\n    }\n    constructor(options = {}){\n        (0, _mapsJs.anyMap).set(this, new Set());\n        (0, _mapsJs.eventsMap).set(this, new Map());\n        (0, _mapsJs.producersMap).set(this, new Map());\n        (0, _mapsJs.producersMap).get(this).set(anyProducer, new Set());\n        this.debug = options.debug ?? {};\n        if (this.debug.enabled === undefined) this.debug.enabled = false;\n        if (!this.debug.logger) this.debug.logger = (type, debugName, eventName, eventData)=>{\n            try {\n                // TODO: Use https://github.com/sindresorhus/safe-stringify when the package is more mature. Just copy-paste the code.\n                eventData = JSON.stringify(eventData);\n            } catch  {\n                eventData = `Object with the following keys failed to stringify: ${Object.keys(eventData).join(\",\")}`;\n            }\n            if (typeof eventName === \"symbol\" || typeof eventName === \"number\") eventName = eventName.toString();\n            const currentTime = new Date();\n            const logTime = `${currentTime.getHours()}:${currentTime.getMinutes()}:${currentTime.getSeconds()}.${currentTime.getMilliseconds()}`;\n            console.log(`[${logTime}][emittery:${type}][${debugName}] Event Name: ${eventName}\\n\\tdata: ${eventData}`);\n        };\n    }\n    logIfDebugEnabled(type, eventName, eventData) {\n        if (Emittery.isDebugEnabled || this.debug.enabled) this.debug.logger(type, this.debug.name, eventName, eventData);\n    }\n    on(eventNames, listener) {\n        assertListener(listener);\n        eventNames = Array.isArray(eventNames) ? eventNames : [\n            eventNames\n        ];\n        for (const eventName of eventNames){\n            assertEventName(eventName);\n            let set = getListeners(this, eventName);\n            if (!set) {\n                set = new Set();\n                const events = (0, _mapsJs.eventsMap).get(this);\n                events.set(eventName, set);\n            }\n            set.add(listener);\n            this.logIfDebugEnabled(\"subscribe\", eventName, undefined);\n            if (!isMetaEvent(eventName)) emitMetaEvent(this, listenerAdded, {\n                eventName,\n                listener\n            });\n        }\n        return this.off.bind(this, eventNames, listener);\n    }\n    off(eventNames, listener) {\n        assertListener(listener);\n        eventNames = Array.isArray(eventNames) ? eventNames : [\n            eventNames\n        ];\n        for (const eventName of eventNames){\n            assertEventName(eventName);\n            const set = getListeners(this, eventName);\n            if (set) {\n                set.delete(listener);\n                if (set.size === 0) {\n                    const events = (0, _mapsJs.eventsMap).get(this);\n                    events.delete(eventName);\n                }\n            }\n            this.logIfDebugEnabled(\"unsubscribe\", eventName, undefined);\n            if (!isMetaEvent(eventName)) emitMetaEvent(this, listenerRemoved, {\n                eventName,\n                listener\n            });\n        }\n    }\n    once(eventNames) {\n        let off_;\n        const promise = new Promise((resolve)=>{\n            off_ = this.on(eventNames, (data)=>{\n                off_();\n                resolve(data);\n            });\n        });\n        promise.off = off_;\n        return promise;\n    }\n    events(eventNames) {\n        eventNames = Array.isArray(eventNames) ? eventNames : [\n            eventNames\n        ];\n        for (const eventName of eventNames)assertEventName(eventName);\n        return iterator(this, eventNames);\n    }\n    async emit(eventName, eventData) {\n        assertEventName(eventName);\n        if (isMetaEvent(eventName) && !canEmitMetaEvents) throw new TypeError(\"`eventName` cannot be meta event `listenerAdded` or `listenerRemoved`\");\n        this.logIfDebugEnabled(\"emit\", eventName, eventData);\n        enqueueProducers(this, eventName, eventData);\n        const listeners = getListeners(this, eventName) ?? new Set();\n        const anyListeners = (0, _mapsJs.anyMap).get(this);\n        const staticListeners = [\n            ...listeners\n        ];\n        const staticAnyListeners = isMetaEvent(eventName) ? [] : [\n            ...anyListeners\n        ];\n        await resolvedPromise;\n        await Promise.all([\n            ...staticListeners.map(async (listener)=>{\n                if (listeners.has(listener)) return listener(eventData);\n            }),\n            ...staticAnyListeners.map(async (listener)=>{\n                if (anyListeners.has(listener)) return listener(eventName, eventData);\n            })\n        ]);\n    }\n    async emitSerial(eventName, eventData) {\n        assertEventName(eventName);\n        if (isMetaEvent(eventName) && !canEmitMetaEvents) throw new TypeError(\"`eventName` cannot be meta event `listenerAdded` or `listenerRemoved`\");\n        this.logIfDebugEnabled(\"emitSerial\", eventName, eventData);\n        const listeners = getListeners(this, eventName) ?? new Set();\n        const anyListeners = (0, _mapsJs.anyMap).get(this);\n        const staticListeners = [\n            ...listeners\n        ];\n        const staticAnyListeners = [\n            ...anyListeners\n        ];\n        await resolvedPromise;\n        /* eslint-disable no-await-in-loop */ for (const listener of staticListeners)if (listeners.has(listener)) await listener(eventData);\n        for (const listener of staticAnyListeners)if (anyListeners.has(listener)) await listener(eventName, eventData);\n    /* eslint-enable no-await-in-loop */ }\n    onAny(listener) {\n        assertListener(listener);\n        this.logIfDebugEnabled(\"subscribeAny\", undefined, undefined);\n        (0, _mapsJs.anyMap).get(this).add(listener);\n        emitMetaEvent(this, listenerAdded, {\n            listener\n        });\n        return this.offAny.bind(this, listener);\n    }\n    anyEvent() {\n        return iterator(this);\n    }\n    offAny(listener) {\n        assertListener(listener);\n        this.logIfDebugEnabled(\"unsubscribeAny\", undefined, undefined);\n        emitMetaEvent(this, listenerRemoved, {\n            listener\n        });\n        (0, _mapsJs.anyMap).get(this).delete(listener);\n    }\n    clearListeners(eventNames) {\n        eventNames = Array.isArray(eventNames) ? eventNames : [\n            eventNames\n        ];\n        for (const eventName of eventNames){\n            this.logIfDebugEnabled(\"clear\", eventName, undefined);\n            if (isEventKeyType(eventName)) {\n                const set = getListeners(this, eventName);\n                if (set) set.clear();\n                const producers = getEventProducers(this, eventName);\n                if (producers) {\n                    for (const producer of producers)producer.finish();\n                    producers.clear();\n                }\n            } else {\n                (0, _mapsJs.anyMap).get(this).clear();\n                for (const [eventName, listeners] of (0, _mapsJs.eventsMap).get(this).entries()){\n                    listeners.clear();\n                    (0, _mapsJs.eventsMap).get(this).delete(eventName);\n                }\n                for (const [eventName, producers] of (0, _mapsJs.producersMap).get(this).entries()){\n                    for (const producer of producers)producer.finish();\n                    producers.clear();\n                    (0, _mapsJs.producersMap).get(this).delete(eventName);\n                }\n            }\n        }\n    }\n    listenerCount(eventNames) {\n        eventNames = Array.isArray(eventNames) ? eventNames : [\n            eventNames\n        ];\n        let count = 0;\n        for (const eventName of eventNames){\n            if (isEventKeyType(eventName)) {\n                count += (0, _mapsJs.anyMap).get(this).size + (getListeners(this, eventName)?.size ?? 0) + (getEventProducers(this, eventName)?.size ?? 0) + (getEventProducers(this)?.size ?? 0);\n                continue;\n            }\n            if (eventName !== undefined) assertEventName(eventName);\n            count += (0, _mapsJs.anyMap).get(this).size;\n            for (const value of (0, _mapsJs.eventsMap).get(this).values())count += value.size;\n            for (const value of (0, _mapsJs.producersMap).get(this).values())count += value.size;\n        }\n        return count;\n    }\n    bindMethods(target, methodNames) {\n        if (typeof target !== \"object\" || target === null) throw new TypeError(\"`target` must be an object\");\n        methodNames = defaultMethodNamesOrAssert(methodNames);\n        for (const methodName of methodNames){\n            if (target[methodName] !== undefined) throw new Error(`The property \\`${methodName}\\` already exists on \\`target\\``);\n            Object.defineProperty(target, methodName, {\n                enumerable: false,\n                value: this[methodName].bind(this)\n            });\n        }\n    }\n}\nexports.default = Emittery;\nconst allEmitteryMethods = Object.getOwnPropertyNames(Emittery.prototype).filter((v)=>v !== \"constructor\");\nObject.defineProperty(Emittery, \"listenerAdded\", {\n    value: listenerAdded,\n    writable: false,\n    enumerable: true,\n    configurable: false\n});\nObject.defineProperty(Emittery, \"listenerRemoved\", {\n    value: listenerRemoved,\n    writable: false,\n    enumerable: true,\n    configurable: false\n});\n\n},{\"./maps.js\":\"422mU\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"fCxzd\"}],\"422mU\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"anyMap\", ()=>anyMap);\nparcelHelpers.export(exports, \"eventsMap\", ()=>eventsMap);\nparcelHelpers.export(exports, \"producersMap\", ()=>producersMap);\nconst anyMap = new WeakMap();\nconst eventsMap = new WeakMap();\nconst producersMap = new WeakMap();\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"fCxzd\"}],\"29BvI\":[function(require,module,exports) {\n// Note: let's keep everything immutable\n/////////////////////\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\n/////////////////////\nparcelHelpers.export(exports, \"create\", ()=>create);\nparcelHelpers.export(exports, \"activate_plugin\", ()=>activate_plugin);\nparcelHelpers.export(exports, \"reduce_plugin\", ()=>reduce_plugin);\nlet instance_count = 0;\nfunction create(parent_state) {\n    return {\n        sid: instance_count++,\n        parent: parent_state || null,\n        plugins: {},\n        cache: {}\n    };\n}\nfunction activate_plugin(state, PLUGIN /*, args*/ ) {\n    const plugin_parent_state = state.parent ? state.parent.plugins[PLUGIN.id] : null;\n    const plugin_state = PLUGIN.state.create(plugin_parent_state);\n    return {\n        ...state,\n        plugins: {\n            ...state.plugins,\n            [PLUGIN.id]: {\n                ...plugin_state,\n                sid: state.sid\n            }\n        }\n    };\n}\nfunction reduce_plugin(state, PLUGIN_ID, reducer) {\n    const initial_plugin_state = state.plugins[PLUGIN_ID];\n    const new_plugin_state = reducer(initial_plugin_state);\n    if (new_plugin_state === initial_plugin_state) return state // no change (immutability expected)\n    ;\n    return {\n        ...state,\n        plugins: {\n            ...state.plugins,\n            [PLUGIN_ID]: new_plugin_state\n        }\n    };\n}\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"fCxzd\"}],\"kfnse\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"PLUGINS_BY_ID\", ()=>PLUGINS_BY_ID);\nparcelHelpers.export(exports, \"PLUGINS\", ()=>PLUGINS);\nvar _indexJs = require(\"./logical-stack/index.js\");\nvar _indexJs1 = require(\"./dependency-injection/index.js\");\nvar _indexJs2 = require(\"./error-handling/index.js\");\nvar _indexJs3 = require(\"./analytics/index.js\");\nconst PLUGINS_BY_ID = {\n    [(0, _indexJs3.PLUGIN)]: (0, _indexJs3.PLUGIN),\n    [(0, _indexJs.PLUGIN).id]: (0, _indexJs.PLUGIN),\n    [(0, _indexJs1.PLUGIN).id]: (0, _indexJs1.PLUGIN),\n    [(0, _indexJs2.PLUGIN).id]: (0, _indexJs2.PLUGIN)\n};\nconst PLUGINS = Object.values(PLUGINS_BY_ID);\n\n},{\"./logical-stack/index.js\":\"jkPID\",\"./dependency-injection/index.js\":\"johL7\",\"./error-handling/index.js\":\"6wErN\",\"./analytics/index.js\":\"eRCXO\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"fCxzd\"}],\"jkPID\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"PLUGIN\", ()=>PLUGIN);\nvar _constsJs = require(\"../../consts.js\");\nvar _stateJs = require(\"../../state.js\");\nvar _constsJs1 = require(\"./consts.js\");\nvar _stateJs1 = require(\"./state.js\");\nvar _utilsJs = require(\"../../utils.js\");\nconst PLUGIN_ID = \"logical_stack\";\nconst BRANCH_JUMP_PSEUDO_STATE = {\n    sid: -1,\n    plugins: {\n        [PLUGIN_ID]: {\n            stack: {\n                // NO module\n                operation: (0, _constsJs1.LOGICAL_STACK_SEPARATOR_NON_ADJACENT)\n            }\n        }\n    }\n};\nfunction _reduceStatePathToLogicalStack(statePath) {\n    let current_module = null;\n    return statePath.reduce((res, state)=>{\n        const { module, operation } = state.plugins[PLUGIN_ID].stack;\n        if (module // check existence of module due to special case \"BRANCH_JUMP_PSEUDO_STATE\" above\n         && module !== current_module) {\n            res = res + (res.length ? (0, _constsJs1.LOGICAL_STACK_SEPARATOR) : \"\") + module;\n            current_module = module;\n        }\n        if (operation) res = res + (0, _constsJs1.LOGICAL_STACK_SEPARATOR) + operation + (0, _constsJs1.LOGICAL_STACK_OPERATION_MARKER);\n        return res;\n    }, \"\") + (0, _constsJs1.LOGICAL_STACK_END_MARKER);\n}\nconst PLUGIN = {\n    id: PLUGIN_ID,\n    state: _stateJs1,\n    augment: (prototype)=>{\n        prototype.setLogicalStack = function setLogicalStack({ module, operation }) {\n            const SXC = this;\n            let root_state = SXC[0, _constsJs.INTERNAL_PROP];\n            root_state = _stateJs.reduce_plugin(root_state, PLUGIN_ID, (state)=>{\n                if (module) state = _stateJs1.set_module(state, module);\n                if (operation) state = _stateJs1.set_operation(state, operation);\n                return state;\n            });\n            SXC[0, _constsJs.INTERNAL_PROP] = root_state;\n            return SXC;\n        };\n        prototype.getLogicalStack = function getLogicalStack() {\n            const SXC = this;\n            return _reduceStatePathToLogicalStack((0, _utilsJs._getSXCStatePath)(SXC));\n        };\n        prototype.getShortLogicalStack = function get_stack_end() {\n            const { stack } = this[0, _constsJs.INTERNAL_PROP].plugins[PLUGIN_ID];\n            return (0, _constsJs1.LOGICAL_STACK_BEGIN_MARKER) + stack.module + (0, _constsJs1.LOGICAL_STACK_SEPARATOR_NON_ADJACENT //LOGICAL_STACK_SEPARATOR\n            ) + stack.operation + (0, _constsJs1.LOGICAL_STACK_OPERATION_MARKER) + (0, _constsJs1.LOGICAL_STACK_END_MARKER);\n        };\n        // internal only\n        // expects an already normalized error (through @offirmo/error-utils)\n        prototype._decorateErrorWithLogicalStack = function _decorateErrorWithLogicalStack(err) {\n            const SXC = this;\n            err._temp = err._temp || {};\n            err.details = err.details || {};\n            const logicalStack = {\n                full: SXC.getLogicalStack()\n            };\n            if (err._temp.SXC) {\n                // OK this error is already decorated.\n                // Thus the message is also already decorated, don't touch it.\n                // BUT we may be able to add more info, can we?\n                if (err.details.logicalStack.includes(logicalStack.full)) ;\n                else {\n                    // SXC chain has branched, reconcile paths\n                    // OK maybe overkill...\n                    const other_path = err._temp.statePath;\n                    const current_path = (0, _utilsJs._getSXCStatePath)(SXC);\n                    // find common path\n                    let last_common_index = 0;\n                    for(let i = 1; i < current_path.length; ++i){\n                        if (other_path[i] !== current_path[i]) break;\n                        last_common_index = i;\n                    }\n                    // reconcile the 2 stack traces\n                    let improvedStatePath = [].concat(current_path);\n                    improvedStatePath.push(BRANCH_JUMP_PSEUDO_STATE);\n                    improvedStatePath = improvedStatePath.concat(other_path.slice(last_common_index + 1));\n                    err._temp.statePath = improvedStatePath;\n                    err.details.logicalStack = _reduceStatePathToLogicalStack(improvedStatePath);\n                }\n            } else {\n                err._temp.SXC = SXC;\n                err._temp.statePath = (0, _utilsJs._getSXCStatePath)(SXC);\n                logicalStack.short = SXC.getShortLogicalStack();\n                if (err.message.startsWith(logicalStack.short)) // can that happen??? It's a bug!\n                /* eslint-disable no-console */ console.warn(\"UNEXPECTED SXC non-decorated error already prefixed??\");\n                else {\n                    const original_message = err.message;\n                    err.message = logicalStack.short + \": \" + original_message;\n                    const expected_first_line_of_the_stack = `${err.name}: ${original_message}`;\n                    if (err.stack?.startsWith(expected_first_line_of_the_stack)) err.stack = `${err.name}: ${err.message}` + err.stack.slice(expected_first_line_of_the_stack.length);\n                }\n                err.details.logicalStack = logicalStack.full;\n            }\n            return err;\n        };\n    }\n};\n\n},{\"../../consts.js\":\"8PAoy\",\"../../state.js\":\"29BvI\",\"./consts.js\":\"2Uawm\",\"./state.js\":\"8tIhA\",\"../../utils.js\":\"5oqdL\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"fCxzd\"}],\"2Uawm\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"LOGICAL_STACK_BEGIN_MARKER\", ()=>LOGICAL_STACK_BEGIN_MARKER);\nparcelHelpers.export(exports, \"LOGICAL_STACK_END_MARKER\", ()=>LOGICAL_STACK_END_MARKER);\nparcelHelpers.export(exports, \"LOGICAL_STACK_MODULE_MARKER\", ()=>LOGICAL_STACK_MODULE_MARKER);\nparcelHelpers.export(exports, \"LOGICAL_STACK_SEPARATOR\", ()=>LOGICAL_STACK_SEPARATOR);\nparcelHelpers.export(exports, \"LOGICAL_STACK_OPERATION_MARKER\", ()=>LOGICAL_STACK_OPERATION_MARKER);\nparcelHelpers.export(exports, \"LOGICAL_STACK_SEPARATOR_NON_ADJACENT\", ()=>LOGICAL_STACK_SEPARATOR_NON_ADJACENT);\nconst LOGICAL_STACK_BEGIN_MARKER = \"\";\nconst LOGICAL_STACK_END_MARKER = \"\";\nconst LOGICAL_STACK_SEPARATOR = \"\\u203A\";\n// '⋅' '↘' ':' '•' '›'\nconst LOGICAL_STACK_MODULE_MARKER = \"\";\nconst LOGICAL_STACK_OPERATION_MARKER = \"\";\n// '…'\nconst LOGICAL_STACK_SEPARATOR_NON_ADJACENT = \"\\u2026\";\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"fCxzd\"}],\"8tIhA\":[function(require,module,exports) {\n/////////////////////\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"create\", ()=>create);\nparcelHelpers.export(exports, \"set_module\", ()=>set_module);\nparcelHelpers.export(exports, \"set_operation\", ()=>set_operation);\nfunction create(parent_state) {\n    const stack = parent_state ? Object.create(parent_state.stack) : (()=>{\n        const stack = Object.create(null);\n        stack.module = undefined;\n        return stack;\n    })();\n    stack.operation = undefined // should never inherit this one\n    ;\n    return {\n        stack\n    };\n}\nfunction set_module(state, module) {\n    const { stack } = state;\n    if (stack.module === module) return state;\n    stack.module = module;\n    return {\n        ...state,\n        stack\n    };\n}\nfunction set_operation(state, operation) {\n    const { stack } = state;\n    if (stack.operation === operation) return state;\n    stack.operation = operation;\n    return {\n        ...state,\n        stack\n    };\n}\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"fCxzd\"}],\"5oqdL\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"flattenToOwn\", ()=>flattenToOwn);\nparcelHelpers.export(exports, \"_getSXCStatePath\", ()=>_getSXCStatePath);\nparcelHelpers.export(exports, \"_flattenSXC\", ()=>_flattenSXC);\nvar _constsJs = require(\"./consts.js\");\nfunction flattenToOwn(object) {\n    if (!object) return object;\n    if (Array.isArray(object)) return object;\n    if (typeof object !== \"object\") return object;\n    const res = Object.create(null);\n    for(const property in object)res[property] = object[property];\n    return res;\n}\n// needed for various tree traversal algorithms\nfunction _getSXCStatePath(SXC) {\n    if (!SXC[0, _constsJs.INTERNAL_PROP].cache.statePath) {\n        const path = [];\n        let state = SXC[0, _constsJs.INTERNAL_PROP];\n        while(state){\n            path.unshift(state);\n            state = state.parent;\n        }\n        SXC[0, _constsJs.INTERNAL_PROP].cache.statePath = path;\n    }\n    return SXC[0, _constsJs.INTERNAL_PROP].cache.statePath;\n}\n// for debug\nfunction _flattenSXC(SXC) {\n    const plugins = {\n        ...SXC[0, _constsJs.INTERNAL_PROP].plugins\n    };\n    plugins.analytics.details = flattenToOwn(plugins.analytics.details);\n    plugins.dependency_injection.context = flattenToOwn(plugins.dependency_injection.context);\n    plugins.error_handling.details = flattenToOwn(plugins.error_handling.details);\n    plugins.logical_stack.stack = flattenToOwn(plugins.logical_stack.stack);\n    return plugins;\n}\n\n},{\"./consts.js\":\"8PAoy\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"fCxzd\"}],\"johL7\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"PLUGIN_ID\", ()=>PLUGIN_ID);\nparcelHelpers.export(exports, \"PLUGIN\", ()=>PLUGIN);\nvar _constsJs = require(\"../../consts.js\");\nvar _stateJs = require(\"../../state.js\");\nvar _stateJs1 = require(\"./state.js\");\nvar _utilsJs = require(\"../../utils.js\");\nconst PLUGIN_ID = \"dependency_injection\";\nconst PLUGIN = {\n    id: PLUGIN_ID,\n    state: _stateJs1,\n    augment: (prototype)=>{\n        prototype.injectDependencies = function injectDependencies(deps) {\n            let root_state = this[0, _constsJs.INTERNAL_PROP];\n            root_state = _stateJs.reduce_plugin(root_state, PLUGIN_ID, (state)=>{\n                Object.entries(deps).forEach(([key, value])=>{\n                    state = _stateJs1.injectDependencies(state, key, value);\n                });\n                return state;\n            });\n            this[0, _constsJs.INTERNAL_PROP] = root_state;\n            return this // for chaining\n            ;\n        };\n        prototype.getInjectedDependencies = function getInjectedDependencies() {\n            const plugin_state = this[0, _constsJs.INTERNAL_PROP].plugins[PLUGIN_ID];\n            return (0, _utilsJs.flattenToOwn)(plugin_state.context);\n        };\n    }\n};\n\n},{\"../../consts.js\":\"8PAoy\",\"../../state.js\":\"29BvI\",\"./state.js\":\"8fvr2\",\"../../utils.js\":\"5oqdL\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"fCxzd\"}],\"8fvr2\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\n/////////////////////\nparcelHelpers.export(exports, \"create\", ()=>create);\nparcelHelpers.export(exports, \"injectDependencies\", ()=>injectDependencies);\nfunction create(parent_state) {\n    const context = parent_state ? Object.create(parent_state.context) : Object.create(null) // NO auto-injections here, let's keep it simple. See core & common\n    ;\n    return {\n        context\n    };\n}\nfunction injectDependencies(state, key, value) {\n    const { context } = state;\n    context[key] = value;\n    return {\n        ...state,\n        context\n    };\n}\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"fCxzd\"}],\"6wErN\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"PLUGIN\", ()=>PLUGIN);\nvar _promiseTry = require(\"@offirmo-private/promise-try\");\nvar _timestamps = require(\"@offirmo-private/timestamps\");\nvar _errorUtils = require(\"@offirmo/error-utils\");\nvar _constsJs = require(\"../../consts.js\");\nvar _utilsJs = require(\"../../utils.js\");\nvar _stateJs = require(\"./state.js\");\nvar _catchFactoryJs = require(\"./catch-factory.js\");\nvar _indexJs = require(\"../dependency-injection/index.js\");\nvar _stateJs1 = require(\"../../state.js\");\nconst PLUGIN_ID = \"error_handling\";\nfunction _clean_temp(err) {\n    delete err._temp;\n    return err;\n}\nfunction _handleError({ SXC, debugId = \"?\", shouldRethrow = true }, err) {\n    (0, _catchFactoryJs._create_catcher)({\n        debugId,\n        decorators: [\n            (err)=>(0, _errorUtils.normalizeError)(err, {\n                    alwaysRecreate: true\n                }),\n            (err)=>SXC._decorateErrorWithLogicalStack(err),\n            (err)=>SXC._decorateErrorWithDetails(err)\n        ],\n        onError: shouldRethrow ? null : (err)=>SXC.emitter.emit(\"final-error\", {\n                SXC,\n                err: _clean_temp(err)\n            })\n    })(err);\n}\nconst PLUGIN = {\n    id: PLUGIN_ID,\n    state: _stateJs,\n    augment: (prototype)=>{\n        prototype._decorateErrorWithDetails = function _decorateErrorWithDetails(err) {\n            const SXC = this;\n            const state = SXC[0, _constsJs.INTERNAL_PROP];\n            const now = (0, _timestamps.get\\uA4FDUTC_timestamp\\u203Fms)();\n            const autoDetails = {\n                ENV: state.plugins[0, _indexJs.PLUGIN_ID].context.ENV,\n                TIME: now,\n                SESSION_DURATION_MS: now - state.plugins[0, _indexJs.PLUGIN_ID].context.SESSION_START_TIME_MS\n            };\n            const userDetails = (0, _utilsJs.flattenToOwn)(state.plugins[PLUGIN_ID].details);\n            err.details = {\n                ...autoDetails,\n                ...userDetails,\n                ...err.details || {}\n            };\n            return err;\n        };\n        prototype.setErrorDetails = function setErrorDetails(details) {\n            const SXC = this;\n            let root_state = SXC[0, _constsJs.INTERNAL_PROP];\n            root_state = _stateJs1.reduce_plugin(root_state, PLUGIN_ID, (plugin_state)=>{\n                Object.entries(details).forEach(([key, value])=>{\n                    plugin_state = _stateJs.addDetail(plugin_state, key, value);\n                });\n                return plugin_state;\n            });\n            this[0, _constsJs.INTERNAL_PROP] = root_state;\n            return SXC // for chaining\n            ;\n        };\n        // this getter should normally not be used, errors are automatically decorated\n        prototype.getErrorDetails = function getErrorDetails() {\n            const SXC = this;\n            const plugin_state = SXC[0, _constsJs.INTERNAL_PROP].plugins[PLUGIN_ID];\n            return (0, _utilsJs.flattenToOwn)(plugin_state.details);\n        };\n        // useful if creating an error later from a saved SXC, ex. from a pipeline\n        prototype.createError = function createError(message, details = {}) {\n            const SXC = this;\n            const err = (0, _errorUtils.createError)(message, details);\n            err.framesToPop = (err.framesToPop || 0) + 1;\n            return SXC._decorateErrorWithLogicalStack(SXC._decorateErrorWithDetails(err));\n        };\n        // for termination promises\n        prototype.handleError = function handleError(err, debugId) {\n            const SXC = this;\n            _handleError({\n                SXC,\n                debugId,\n                shouldRethrow: false\n            }, err);\n        };\n        prototype.xTry = function xTry(operation, fn) {\n            console.assert(!!operation);\n            const SXC = this.createChild().setLogicalStack({\n                operation\n            });\n            const params = SXC[0, _constsJs.INTERNAL_PROP].plugins[0, _indexJs.PLUGIN_ID].context;\n            try {\n                return fn(params);\n            } catch (err) {\n                _handleError({\n                    SXC,\n                    debugId: \"xTry\",\n                    shouldRethrow: true\n                }, err);\n            }\n        };\n        prototype.xTryCatch = function xTryCatch(operation, fn) {\n            console.assert(!!operation);\n            const SXC = this.createChild().setLogicalStack({\n                operation\n            });\n            const params = SXC[0, _constsJs.INTERNAL_PROP].plugins[0, _indexJs.PLUGIN_ID].context;\n            try {\n                return fn(params);\n            } catch (err) {\n                _handleError({\n                    SXC,\n                    debugId: \"xTryCatch\",\n                    shouldRethrow: false\n                }, err);\n            }\n        };\n        prototype.xNewPromise = function xPromise(operation, resolver_fn) {\n            console.assert(!!operation);\n            const SXC = this.createChild().setLogicalStack({\n                operation\n            });\n            const params = SXC[0, _constsJs.INTERNAL_PROP].plugins[0, _indexJs.PLUGIN_ID].context;\n            return new Promise(resolver_fn.bind(undefined, params)).catch((err)=>{\n                _handleError({\n                    SXC,\n                    debugId: \"xPromise\",\n                    shouldRethrow: true\n                }, err);\n            });\n        };\n        prototype.xPromiseTry = function xPromiseTry(operation, fn) {\n            console.assert(!!operation);\n            const SXC = this.createChild().setLogicalStack({\n                operation\n            });\n            const params = SXC[0, _constsJs.INTERNAL_PROP].plugins[0, _indexJs.PLUGIN_ID].context;\n            return (0, _promiseTry.promiseTry)(()=>fn(params)).catch((err)=>{\n                _handleError({\n                    SXC,\n                    debugId: \"xPromiseTry\",\n                    shouldRethrow: true\n                }, err);\n            });\n        };\n    }\n};\n\n},{\"@offirmo-private/promise-try\":\"adffi\",\"@offirmo-private/timestamps\":\"1InNY\",\"@offirmo/error-utils\":\"ha69u\",\"../../consts.js\":\"8PAoy\",\"../../utils.js\":\"5oqdL\",\"./state.js\":\"buLou\",\"./catch-factory.js\":\"f93AB\",\"../dependency-injection/index.js\":\"johL7\",\"../../state.js\":\"29BvI\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"fCxzd\"}],\"adffi\":[function(require,module,exports) {\n// https://2ality.com/2017/08/promise-try.html#work-arounds\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"default\", ()=>promiseTry);\nparcelHelpers.export(exports, \"promiseTry\", ()=>promiseTry);\nfunction promiseTry(fn) {\n    return Promise.resolve().then(fn);\n}\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"fCxzd\"}],\"1InNY\":[function(require,module,exports) {\n/* set of functions generating various timestamps as strings,\n * using either convenient or standardized formats.\n * the generators can optionally take the time as param or default to current time.\n */ /////////////////////////////////////////////////\n// ex. 1542780045627\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"get\\uA4FDUTC_timestamp\\u203Fms\", ()=>get\\uA4FDUTC_timestamp\\u203Fms);\nparcelHelpers.export(exports, \"get\\uA4FDUTC_timestamp\\u2D67human_readable\\u203Fdays\", ()=>get\\uA4FDUTC_timestamp\\u2D67human_readable\\u203Fdays);\nparcelHelpers.export(exports, \"get\\uA4FDUTC_timestamp\\u2D67human_readable\\u203Fminutes\", ()=>get\\uA4FDUTC_timestamp\\u2D67human_readable\\u203Fminutes);\nparcelHelpers.export(exports, \"get\\uA4FDUTC_timestamp\\u2D67human_readable\\u203Fseconds\", ()=>get\\uA4FDUTC_timestamp\\u2D67human_readable\\u203Fseconds);\nparcelHelpers.export(exports, \"get\\uA4FDUTC_timestamp\\u2D67human_readable\\u203Fms\", ()=>get\\uA4FDUTC_timestamp\\u2D67human_readable\\u203Fms);\nparcelHelpers.export(exports, \"get\\uA4FDISO8601\\u2D67extended\\u203Fms\", ()=>get\\uA4FDISO8601\\u2D67extended\\u203Fms);\nparcelHelpers.export(exports, \"get\\uA4FDISO8601\\u2D67simplified\\u203Fminutes\", ()=>get\\uA4FDISO8601\\u2D67simplified\\u203Fminutes);\nparcelHelpers.export(exports, \"get\\uA4FDISO8601\\u2D67simplified\\u203Fdays\", ()=>get\\uA4FDISO8601\\u2D67simplified\\u203Fdays);\nparcelHelpers.export(exports, \"TEST_TIMESTAMP_MS\", ()=>TEST_TIMESTAMP_MS);\nfunction get\\uA4FDUTC_timestamp\\u203Fms(now = new Date()) {\n    return +now;\n}\nfunction get\\uA4FDUTC_timestamp\\u2D67human_readable\\u203Fdays(now = new Date()) {\n    const YYYY = now.getUTCFullYear();\n    const MM = String(now.getUTCMonth() + 1).padStart(2, \"0\");\n    const DD = String(now.getUTCDate()).padStart(2, \"0\");\n    return `${YYYY}${MM}${DD}`;\n}\nfunction get\\uA4FDUTC_timestamp\\u2D67human_readable\\u203Fminutes(now = new Date()) {\n    const hh = String(now.getUTCHours()).padStart(2, \"0\");\n    const mm = String(now.getUTCMinutes()).padStart(2, \"0\");\n    return get\\uA4FDUTC_timestamp\\u2D67human_readable\\u203Fdays(now) + `_${hh}h${mm}`;\n}\nfunction get\\uA4FDUTC_timestamp\\u2D67human_readable\\u203Fseconds(now = new Date()) {\n    const ss = String(now.getUTCSeconds()).padStart(2, \"0\");\n    return get\\uA4FDUTC_timestamp\\u2D67human_readable\\u203Fminutes(now) + `m${ss}`;\n}\nfunction get\\uA4FDUTC_timestamp\\u2D67human_readable\\u203Fms(now = new Date()) {\n    const mmm = String(now.getUTCMilliseconds()).padStart(3, \"0\");\n    return get\\uA4FDUTC_timestamp\\u2D67human_readable\\u203Fseconds(now) + `s${mmm}`;\n}\nfunction get\\uA4FDISO8601\\u2D67extended\\u203Fms(now = new Date()) {\n    return now.toISOString();\n}\nfunction get\\uA4FDISO8601\\u2D67simplified\\u203Fminutes(now = new Date()) {\n    return get\\uA4FDISO8601\\u2D67extended\\u203Fms(now).slice(0, 16);\n}\nfunction get\\uA4FDISO8601\\u2D67simplified\\u203Fdays(now = new Date()) {\n    return get\\uA4FDISO8601\\u2D67extended\\u203Fms(now).slice(0, 10);\n}\nconst TEST_TIMESTAMP_MS = 1234567890 // useful for unit tests\n;\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"fCxzd\"}],\"ha69u\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nvar _typesJs = require(\"./types.js\");\nparcelHelpers.exportAll(_typesJs, exports);\nvar _fieldsJs = require(\"./fields.js\");\nparcelHelpers.exportAll(_fieldsJs, exports);\nvar _utilCreateJs = require(\"./util--create.js\");\nparcelHelpers.exportAll(_utilCreateJs, exports);\nvar _utilNormalizeJs = require(\"./util--normalize.js\");\nparcelHelpers.exportAll(_utilNormalizeJs, exports);\nvar _utilTryOrFallbackJs = require(\"./util--try-or-fallback.js\");\nparcelHelpers.exportAll(_utilTryOrFallbackJs, exports);\n\n},{\"./types.js\":false,\"./fields.js\":false,\"./util--create.js\":\"4arSo\",\"./util--normalize.js\":\"8KjFW\",\"./util--try-or-fallback.js\":false,\"@parcel/transformer-js/src/esmodule-helpers.js\":\"fCxzd\"}],\"ddX28\":[function(require,module,exports) {\n// explanation of those fields is in ./fields.ts\n/////////////////////////////////////////////////\n// eXtended error\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\n/////////////////////////////////////////////////\nparcelHelpers.export(exports, \"is\\uA4FDError\", ()=>is\\uA4FDError);\nconst DEBUG = false;\nconst DEMO_ERROR = new Error(\"[Test!]\");\nfunction is\\uA4FDError(err_like) {\n    if (typeof err_like?.message !== \"string\" || !err_like?.message) {\n        DEBUG && console.error(\"hasErrorShape() BAD message\", {\n            type: typeof err_like?.message,\n            expected_type: typeof DEMO_ERROR?.message,\n            err_like\n        });\n        return false;\n    }\n    if (typeof err_like?.name !== \"string\" || !err_like?.name) {\n        DEBUG && console.error(\"hasErrorShape() BAD name\", {\n            type: typeof err_like?.name,\n            expected_type: typeof DEMO_ERROR?.name,\n            err_like\n        });\n        return false;\n    }\n    if (typeof err_like?.stack !== \"string\") {\n        DEBUG && console.error(\"hasErrorShape() BAD stack\", {\n            type: typeof err_like?.stack,\n            expected_type: typeof DEMO_ERROR?.stack,\n            err_like\n        });\n        return false;\n    }\n    return true;\n}\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"fCxzd\"}],\"7G3A7\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\n/////////////////////////////////////////////////\nparcelHelpers.export(exports, \"STRICT_STANDARD_ERROR_FIELDS\", ()=>STRICT_STANDARD_ERROR_FIELDS);\nparcelHelpers.export(exports, \"QUASI_STANDARD_ERROR_FIELDS\", ()=>QUASI_STANDARD_ERROR_FIELDS);\nparcelHelpers.export(exports, \"COMMON_ERROR_FIELDS\", ()=>COMMON_ERROR_FIELDS);\nparcelHelpers.export(exports, \"COMMON_ERROR_FIELDS_EXTENDED\", ()=>COMMON_ERROR_FIELDS_EXTENDED);\n/////////////////////////////////////////////////\n// order is important!\n// it may be used for display by other libs\nconst STRICT_STANDARD_ERROR_FIELDS = new Set([\n    // standard fields\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error/prototype\n    \"name\",\n    \"message\",\n    \"cause\" // ES2022 https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error/cause\n]);\nconst QUASI_STANDARD_ERROR_FIELDS = new Set([\n    // first inherit from previous\n    ...STRICT_STANDARD_ERROR_FIELDS,\n    // quasi-standard: followed by all browsers + node\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error/prototype\n    \"stack\",\n    // ES2024\n    // already supported in TypeScript https://devblogs.microsoft.com/typescript/announcing-typescript-5-2/#using-declarations-and-explicit-resource-management\n    \"suppressed\"\n]);\nconst COMMON_ERROR_FIELDS = new Set([\n    // first inherit from previous\n    ...QUASI_STANDARD_ERROR_FIELDS,\n    // standard in node only:\n    \"code\",\n    // https://nodejs.org/dist/latest/docs/api/errors.html#errors_node_js_error_codes\n    // standard in Firefox only for AggregateError:\n    \"errors\",\n    // non-standard but widely used:\n    \"statusCode\",\n    \"shouldRedirect\",\n    \"framesToPop\"\n]);\n// TODO node has a lot of other fields https://nodejs.org/api/errors.html\nconst COMMON_ERROR_FIELDS_EXTENDED = new Set([\n    // first inherit from previous\n    ...COMMON_ERROR_FIELDS,\n    // My (Offirmo) extensions:\n    \"_temp\",\n    \"details\"\n]);\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"fCxzd\"}],\"4arSo\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\n/////////////////////////////////////////////////\nparcelHelpers.export(exports, \"createError\", ()=>createError);\nvar _fieldsJs = require(\"./fields.js\");\n/////////////////////////////////////////////////\nconst AUTOGENERATED_ERROR_FIELDS = new Set([\n    \"stack\",\n    \"message\",\n    \"name\"\n]);\nfunction createError(message, attributes = {}, ctor = Error) {\n    message = String(message || attributes.message || \"Unknown error!\");\n    if (!message.toLowerCase().includes(\"error\")) {\n        if (ctor.name?.endsWith(\"Error\")) message = ctor.name + \": \" + message;\n        else message = \"Error: \" + message;\n    }\n    let err = new ctor(message);\n    Object.keys(attributes).forEach((k)=>{\n        const isErrorAttribute = (0, _fieldsJs.COMMON_ERROR_FIELDS_EXTENDED).has(k);\n        const isAutogeneratedErrorAttribute = AUTOGENERATED_ERROR_FIELDS.has(k);\n        if (k === \"details\") err.details = {\n            ...err.details,\n            ...attributes[k]\n        };\n        else if (isAutogeneratedErrorAttribute) ;\n        else if (isErrorAttribute) err[k] = attributes[k];\n        else {\n            err.details = err.details || {};\n            err.details[k] = attributes[k];\n        }\n    });\n    err.framesToPop = (err.framesToPop || 0) + 1;\n    return err;\n}\n\n},{\"./fields.js\":\"7G3A7\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"fCxzd\"}],\"8KjFW\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\n/////////////////////////////////////////////////\nparcelHelpers.export(exports, \"normalizeError\", ()=>normalizeError);\nvar _typesJs = require(\"./types.js\");\nvar _fieldsJs = require(\"./fields.js\");\n/////////////////////////////////////////////////\nconst DEBUG = false;\nconst WARN_NON_ERROR_THROWN = true;\n// Normalize any thrown object into a true, normal error.\n// NOTE: will *always* recreate the error. TODO evaluate if possible to improve?\n// Anything can be thrown: undefined, string, number...\n// But that's obviously not a good practice.\n// Even Error-like objects are sometime fancy!\n// - seen: in browser, sometimes, an error-like, un-writable object is thrown\n// - seen: frozen\n// - seen: non-enumerable props\n// So we want to ensure a true, safe, writable error object.\nfunction normalizeError(err_like, { alwaysRecreate = false } = {}) {\n    const has\\uA4FDminimal_error_shape = (0, _typesJs.is\\uA4FDError)(err_like);\n    // TODO should we normalize \"cause\" as well?\n    if (has\\uA4FDminimal_error_shape && !alwaysRecreate) // shortcut for most of the time\n    return err_like;\n    if (!has\\uA4FDminimal_error_shape) WARN_NON_ERROR_THROWN && console.warn(`WARNING: normalizeError() saw a non-Error thing thrown!`, {\n        err_like\n    });\n    if (err_like === undefined || err_like === null) // we can't get prototype from those, shortcut it:\n    return new Error(`[non-error: \"${err_like}\" thrown!]`);\n    // just for a clearer message\n    if (typeof err_like === \"string\") return new Error(`[non-error of type \"${typeof err_like}\" thrown: \"${err_like}\"!]`);\n    else if (typeof err_like !== \"object\") // we can't get prototype from those, shortcut it:\n    return new Error(`[non-error of type \"${typeof err_like}\" thrown!]`);\n    try {\n        const should_recreate = alwaysRecreate || !has\\uA4FDminimal_error_shape;\n        const true_err = should_recreate ? (()=>{\n            const true_err = (()=>{\n                let message = err_like?.message // even no error shape may have a message prop\n                 ? String(err_like.message) : `[object with no error shape thrown!]`;\n                try {\n                    const current_prototype = Object.getPrototypeOf(err_like);\n                    // should we restrict to global standard constructors? TBD\n                    const wanted_constructor = current_prototype?.constructor?.name?.endsWith(\"Error\") ? current_prototype.constructor : Error;\n                    // https://stackoverflow.com/questions/1606797/use-of-apply-with-new-operator-is-this-possible\n                    const candidate = new (Function.prototype.bind.call(wanted_constructor, null, message));\n                    if (!(0, _typesJs.is\\uA4FDError)(candidate)) throw new Error(\"[re-created but still !has\\uA4FDminimal_error_shape: will be caught below]\");\n                    return candidate;\n                } catch (_err) {\n                    DEBUG && console.error(\"NE1\", _err);\n                    // the constructor didn't work or didn't yield a proper error, fallback to a normal, safe Error\n                    const true_err = new Error(message);\n                    return true_err;\n                }\n            })();\n            // properly re-attach fields if they exist\n            // and normalize them if well defined and important enough\n            (0, _fieldsJs.COMMON_ERROR_FIELDS_EXTENDED).forEach((prop)=>{\n                if (err_like[prop]) switch(prop){\n                    case \"message\":\n                        break;\n                    case \"name\":\n                        break;\n                    case \"framesToPop\":\n                        // normalization recommended for processing the stack properly\n                        true_err[prop] = Number.parseInt(err_like[prop]);\n                        break;\n                    default:\n                        // TODO consider deep copies?\n                        true_err[prop] = err_like[prop];\n                        break;\n                }\n            });\n            return true_err;\n        })() : err_like;\n        return true_err;\n    } catch (_err) {\n        DEBUG && console.error(\"NE2\", _err);\n        WARN_NON_ERROR_THROWN && console.warn(`WARNING: normalizeError() saw a dangerous thing thrown!`, {\n            err_like\n        });\n        // if we're here, that means that err_like is *very* fancy, better not probe out further.\n        return new Error(`[non-error: <fancy object> thrown!]`);\n    }\n}\n\n},{\"./types.js\":\"ddX28\",\"./fields.js\":\"7G3A7\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"fCxzd\"}],\"buLou\":[function(require,module,exports) {\n/////////////////////\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\n/////////////////////\nparcelHelpers.export(exports, \"create\", ()=>create);\nparcelHelpers.export(exports, \"addDetail\", ()=>addDetail);\nfunction create(parent_state) {\n    const details = parent_state ? Object.create(parent_state.details) : Object.create(null) // NO auto-details here, let's keep it simple + usually shared with analytics. See core or platform specific code.\n    ;\n    return {\n        details\n    };\n}\nfunction addDetail(state, key, value) {\n    const { details } = state;\n    details[key] = value;\n    return {\n        ...state,\n        details\n    };\n}\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"fCxzd\"}],\"f93AB\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"_create_catcher\", ()=>_create_catcher);\nfunction _create_catcher({ decorators = [], onError, debugId = \"?\" } = {}) {\n    return (err)=>{\n        //console.info(`[catchFactory from ${debugId}]`)\n        err = decorators.reduce((err, decorator)=>{\n            try {\n                err = decorator(err);\n                if (!err.message) throw new Error();\n            } catch (decoratorErr) {\n                /* eslint-disable no-console */ console.error(`catchFactory exec from ${debugId}: bad decorator!`, {\n                    err,\n                    decoratorErr,\n                    \"decorator.name\": decorator.name\n                });\n            /* eslint-enable no-console */ }\n            return err;\n        }, err);\n        if (onError) return onError(err);\n        throw err // or rethrow since still unhandled\n        ;\n    };\n}\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"fCxzd\"}],\"eRCXO\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"PLUGIN_ID\", ()=>PLUGIN_ID);\nparcelHelpers.export(exports, \"PLUGIN\", ()=>PLUGIN);\nvar _timestamps = require(\"@offirmo-private/timestamps\");\nvar _constsJs = require(\"../../consts.js\");\nvar _stateJs = require(\"../../state.js\");\nvar _utilsJs = require(\"../../utils.js\");\nvar _stateJs1 = require(\"./state.js\");\nvar _indexJs = require(\"../dependency-injection/index.js\");\nconst PLUGIN_ID = \"analytics\";\nconst PLUGIN = {\n    id: PLUGIN_ID,\n    state: _stateJs1,\n    augment: (prototype)=>{\n        prototype.setAnalyticsDetails = function setAnalyticsDetails(details) {\n            const SXC = this;\n            let root_state = SXC[0, _constsJs.INTERNAL_PROP];\n            root_state = _stateJs.reduce_plugin(root_state, PLUGIN_ID, (plugin_state)=>{\n                Object.entries(details).forEach(([key, value])=>{\n                    plugin_state = _stateJs1.addDetail(plugin_state, key, value);\n                });\n                return plugin_state;\n            });\n            this[0, _constsJs.INTERNAL_PROP] = root_state;\n            return SXC // for chaining\n            ;\n        };\n        prototype.getAnalyticsDetails = function getAnalyticsDetails() {\n            const SXC = this;\n            const plugin_state = SXC[0, _constsJs.INTERNAL_PROP].plugins[PLUGIN_ID];\n            return (0, _utilsJs.flattenToOwn)(plugin_state.details);\n        };\n        prototype.fireAnalyticsEvent = function fireAnalyticsEvent(eventId, details = {}) {\n            const SXC = this;\n            const now = (0, _timestamps.get\\uA4FDUTC_timestamp\\u203Fms)();\n            const root_state = SXC[0, _constsJs.INTERNAL_PROP];\n            if (!eventId) throw new Error(\"Incorrect eventId!\");\n            const { ENV } = SXC.getInjectedDependencies();\n            const autoDetails = {\n                ENV,\n                TIME: now,\n                SESSION_DURATION_MS: now - root_state.plugins[0, _indexJs.PLUGIN_ID].context.SESSION_START_TIME_MS\n            };\n            const userDetails = SXC.getAnalyticsDetails();\n            details = {\n                ...autoDetails,\n                ...userDetails,\n                ...details\n            };\n            SXC.emitter.emit(\"analytics\", {\n                SXC,\n                eventId,\n                details\n            });\n            return SXC // for chaining\n            ;\n        };\n    }\n};\n\n},{\"@offirmo-private/timestamps\":\"1InNY\",\"../../consts.js\":\"8PAoy\",\"../../state.js\":\"29BvI\",\"../../utils.js\":\"5oqdL\",\"./state.js\":\"i42Hx\",\"../dependency-injection/index.js\":\"johL7\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"fCxzd\"}],\"i42Hx\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\n/////////////////////\nparcelHelpers.export(exports, \"create\", ()=>create);\nparcelHelpers.export(exports, \"addDetail\", ()=>addDetail);\nfunction create(parent_state) {\n    const details = parent_state ? Object.create(parent_state.details) : Object.create(null) // NO auto-details here, let's keep it simple. See core or platform specific code.\n    ;\n    return {\n        details\n    };\n}\nfunction addDetail(state, key, value) {\n    const { details } = state;\n    details[key] = value;\n    return {\n        ...state,\n        details\n    };\n}\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"fCxzd\"}],\"cMbf5\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\n/////////////////////////////////////////////////\nparcelHelpers.export(exports, \"decorateWithDetectedEnv\", ()=>decorateWithDetectedEnv);\nvar _timestamps = require(\"@offirmo-private/timestamps\");\nvar process = require(\"cd1632990c160528\");\n/////////////////////////////////////////////////\nfunction decorateWithDetectedEnv(SXC) {\n    const ENV = (()=>{\n        try {\n            if (typeof process !== \"undefined\" && true) return \"production\";\n        } catch (err) {\n        /* swallow */ }\n        return \"development\";\n    })();\n    const IS_DEV_MODE = false;\n    const IS_VERBOSE = false;\n    const CHANNEL = \"dev\";\n    const SESSION_START_TIME_MS = (0, _timestamps.get\\uA4FDUTC_timestamp\\u203Fms)();\n    SXC.injectDependencies({\n        ENV,\n        \"NODE_ENV\": ENV,\n        IS_DEV_MODE,\n        IS_VERBOSE,\n        CHANNEL,\n        SESSION_START_TIME_MS\n    });\n    SXC.setAnalyticsAndErrorDetails({\n        ENV,\n        CHANNEL\n    });\n}\n\n},{\"cd1632990c160528\":\"4FVp5\",\"@offirmo-private/timestamps\":\"1InNY\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"fCxzd\"}],\"4FVp5\":[function(require,module,exports) {\n// shim for using process in browser\nvar process = module.exports = {};\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\nvar cachedSetTimeout;\nvar cachedClearTimeout;\nfunction defaultSetTimout() {\n    throw new Error(\"setTimeout has not been defined\");\n}\nfunction defaultClearTimeout() {\n    throw new Error(\"clearTimeout has not been defined\");\n}\n(function() {\n    try {\n        if (typeof setTimeout === \"function\") cachedSetTimeout = setTimeout;\n        else cachedSetTimeout = defaultSetTimout;\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === \"function\") cachedClearTimeout = clearTimeout;\n        else cachedClearTimeout = defaultClearTimeout;\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n})();\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) //normal enviroments in sane situations\n    return setTimeout(fun, 0);\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch (e) {\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch (e) {\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) //normal enviroments in sane situations\n    return clearTimeout(marker);\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e) {\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e) {\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) return;\n    draining = false;\n    if (currentQueue.length) queue = currentQueue.concat(queue);\n    else queueIndex = -1;\n    if (queue.length) drainQueue();\n}\nfunction drainQueue() {\n    if (draining) return;\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n    var len = queue.length;\n    while(len){\n        currentQueue = queue;\n        queue = [];\n        while(++queueIndex < len)if (currentQueue) currentQueue[queueIndex].run();\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\nprocess.nextTick = function(fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) for(var i = 1; i < arguments.length; i++)args[i - 1] = arguments[i];\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) runTimeout(drainQueue);\n};\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function() {\n    this.fun.apply(null, this.array);\n};\nprocess.title = \"browser\";\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = \"\"; // empty string to avoid regexp issues\nprocess.versions = {};\nfunction noop() {}\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\nprocess.listeners = function(name) {\n    return [];\n};\nprocess.binding = function(name) {\n    throw new Error(\"process.binding is not supported\");\n};\nprocess.cwd = function() {\n    return \"/\";\n};\nprocess.chdir = function(dir) {\n    throw new Error(\"process.chdir is not supported\");\n};\nprocess.umask = function() {\n    return 0;\n};\n\n},{}]},[], null, \"parcelRequire375b\")\n\n//# sourceMappingURL=02-sxc.c2e85f0e.js.map\n","export * from './types.js'\nexport * from './root.js'\nexport * from './core.js'\nexport * from './utils.js'\n","import Emittery from 'emittery'\nimport { TimestampUTCMs } from '@offirmo-private/timestamps'\nimport { XXError } from '@offirmo/error-utils'\n\n/////////////////////////////////////////////////\n\nexport interface BaseInjections {\n\tlogger: any // TODO fix\n\n\t// detected env\n\tENV: string\n\tNODE_ENV: string\n\tIS_DEV_MODE: boolean\n\tIS_VERBOSE: boolean\n\tCHANNEL: string\n\tSESSION_START_TIME_MS: TimestampUTCMs\n}\n\nexport interface BaseAnalyticsDetails {\n\tENV: string\n\tCHANNEL: string\n}\n\nexport interface BaseErrorDetails {\n\tENV: string\n\tCHANNEL: string\n}\n\nexport interface WithSXC<Injections, AnalyticsDetails, ErrorDetails> {\n\tSXC: SoftExecutionContext<Injections, AnalyticsDetails, ErrorDetails>\n}\n\nexport interface EventDataMap<Injections, AnalyticsDetails, ErrorDetails> {\n\t'analytics':\n\t\tInjections\n\t\t& BaseInjections\n\t\t& WithSXC<Injections, AnalyticsDetails, ErrorDetails>\n\t\t& { eventId: string, details: any }\n\t'final-error':\n\t\tInjections\n\t\t& BaseInjections\n\t\t& WithSXC<Injections, AnalyticsDetails, ErrorDetails>\n\t\t& { err: XXError }\n}\n\nexport type OperationParams<Injections, AnalyticsDetails, ErrorDetails> =\n\tInjections\n\t\t& BaseInjections\n\t\t& WithSXC<Injections, AnalyticsDetails, ErrorDetails>\n\nexport type Operation<T, Injections, AnalyticsDetails, ErrorDetails> =\n\t(params: OperationParams<Injections, AnalyticsDetails, ErrorDetails>) => T\n\nexport interface SoftExecutionContext<\n\tInjections = {},\n\tAnalyticsDetails = {},\n\tErrorDetails = {}\n> {\n\n\t/////////////////////\n\t// core\n\tcreateChild: ()\n\t\t=> SoftExecutionContext<Injections, AnalyticsDetails, ErrorDetails>\n\n\temitter: Emittery<EventDataMap<Injections, AnalyticsDetails, ErrorDetails>>\n\n\t/////////////////////\n\t// plugin: dependency injection\n\tinjectDependencies: (p: Partial<\n\t\tInjections\n\t\t& BaseInjections\n\t\t& WithSXC<Injections, AnalyticsDetails, ErrorDetails>\n\t>)\n\t\t=> SoftExecutionContext<Injections, AnalyticsDetails, ErrorDetails>\n\tgetInjectedDependencies: () =>\n\t\tInjections\n\t\t& BaseInjections\n\t\t& WithSXC<Injections, AnalyticsDetails, ErrorDetails>\n\n\t/////////////////////\n\t// plugin: logical stack\n\tsetLogicalStack: (p: { module?: string, operation?: string})\n\t\t=> SoftExecutionContext<Injections, AnalyticsDetails, ErrorDetails>\n\tgetLogicalStack: () => string\n\tgetShortLogicalStack: () => string\n\n\t/////////////////////\n\t// convenience analytics + error\n\tsetAnalyticsAndErrorDetails: (p: Partial<AnalyticsDetails & ErrorDetails>)\n\t\t=> SoftExecutionContext<Injections, AnalyticsDetails, ErrorDetails>\n\n\t/////////////////////\n\t// plugin: analytics\n\tsetAnalyticsDetails: (p: Partial<AnalyticsDetails>)\n\t\t=> SoftExecutionContext<Injections, AnalyticsDetails, ErrorDetails>\n\tgetAnalyticsDetails: () => AnalyticsDetails & BaseAnalyticsDetails\n\tfireAnalyticsEvent: (id: string, extraDetails?: any)\n\t\t=> SoftExecutionContext<Injections, AnalyticsDetails, ErrorDetails>\n\n\t/////////////////////\n\t// plugin: error handling\n\tsetErrorDetails: (p: Partial<ErrorDetails>)\n\t\t=> SoftExecutionContext<Injections, AnalyticsDetails, ErrorDetails>\n\tgetErrorDetails: () => ErrorDetails & BaseErrorDetails\n\n\tcreateError: (message: string, details: XXError['details']) => XXError\n\thandleError: (err: XXError, debugId: string) => void\n\n\txTry: <T>(operation: string, fn: Operation<T, Injections, AnalyticsDetails, ErrorDetails>) => T\n\txTryCatch: <T>(operation: string, fn: Operation<T, Injections, AnalyticsDetails, ErrorDetails>) => T | undefined\n\n\txPromiseTry: <T>(operation: string, fn: Operation<Promise<T>, Injections, AnalyticsDetails, ErrorDetails>) => Promise<T>\n\txNewPromise: <T>(operation: string, fn: (\n\t\tp: Injections\n\t\t\t& BaseInjections\n\t\t\t& WithSXC<Injections, AnalyticsDetails, ErrorDetails>,\n\t\t_resolve: (value?: T | PromiseLike<T>) => void,\n\t\t_reject: (reason?: any) => void,\n\t) => void) => Promise<T>\n}\n","import { SoftExecutionContext } from './types.js'\nimport { _createSXC } from './core.js'\n\n/////////////////////\n\nfunction getRootSXC<Injections = {}, AnalyticsDetails = {}, ErrorDetails = {}>(): SoftExecutionContext<Injections, AnalyticsDetails, ErrorDetails> {\n\tconst global_this = globalThis as any\n\n\tif (!global_this.__global_root_sec) {\n\t\t//console.log(`[${LIB}] Creating root context…`)\n\t\tglobal_this.__global_root_sec = _createSXC()\n\t}\n\n\treturn global_this.__global_root_sec\n}\n\nfunction _test_only__reset_root_SXC() {\n\tconst global_this = globalThis as any\n\n\tdelete global_this.__global_root_sec\n}\n\n/////////////////////\n\nexport {\n\tgetRootSXC,\n\t_test_only__reset_root_SXC,\n}\n","import { LIB, INTERNAL_PROP } from './consts.js'\nimport { SoftExecutionContext } from './types.js'\nimport { ROOT_PROTOTYPE } from './root-prototype.js'\nimport * as State from './state.js'\nimport { PLUGINS } from './plugins/index.js'\nimport { decorateWithDetectedEnv } from './common.js'\n\n/////////////////////////////////////////////////\n\nROOT_PROTOTYPE.createChild = function createChild(args: any) {\n\treturn _createSXC({\n\t\t...args,\n\t\tparent: this,\n\t})\n}\n\nPLUGINS.forEach(PLUGIN => {\n\tPLUGIN.augment(ROOT_PROTOTYPE)\n})\n\n/////////////////////////////////////////////////\n\nfunction isSXC(SXC: any): SXC is SoftExecutionContext {\n\treturn (SXC && SXC[INTERNAL_PROP])\n}\n\n// this function should normally NOT be called directly\n// use getRootSXC() or make a getLibSXC()\nfunction _createSXC<Injections, AnalyticsDetails, ErrorDetails>(args: any = {}): SoftExecutionContext<Injections, AnalyticsDetails, ErrorDetails> {\n\t/////// PARAMS ///////\n\n\tif (args.parent && !isSXC(args.parent))\n\t\tthrow new Error(`${LIB}›createSXC() argument error: parent must be a valid SXC!`)\n\n\tlet unhandled_args = Object.keys(args)\n\n\tconst SXC = Object.create(ROOT_PROTOTYPE)\n\n\t/////// STATE ///////\n\tconst parent_state = args.parent ? args.parent[INTERNAL_PROP] : undefined\n\tlet state = State.create(parent_state)\n\tunhandled_args = unhandled_args.filter(arg => arg !== 'parent')\n\n\tPLUGINS.forEach(PLUGIN => {\n\t\tstate = State.activate_plugin(state, PLUGIN)\n\t})\n\n\tSXC[INTERNAL_PROP] = state\n\n\t// auto injections\n\tif (!args.parent) {\n\t\tSXC.injectDependencies({\n\t\t\tlogger: console, // use universal debug API? NO because the placeholder = NOOP = would cause no logs visible by default\n\t\t})\n\n\t\tdecorateWithDetectedEnv(SXC)\n\t}\n\tSXC.injectDependencies({ SXC })\n\n\t//console.log('createSXC', SXC, args.parent)\n\n\t// Here we could send an event on the SXC bus. No usage for now.\n\t// Here we could have lifecycle methods. No usage for now.\n\n\tif (unhandled_args.length)\n\t\tthrow new Error(`${LIB}›createSXC() argument error: unknown args: [${unhandled_args.join(',')}]!`)\n\n\t/////////////////////\n\n\treturn SXC\n}\n\n/////////////////////////////////////////////////\n\nexport {\n\tisSXC,\n\t_createSXC,\n}\n","\nconst LIB = 'soft-execution-context'\n\nconst INTERNAL_PROP = '_SXC'\n\n/////////////////////////////////////////////////\n\nexport {\n\tLIB,\n\tINTERNAL_PROP,\n}\n","import EventEmitter from 'emittery'\n\n/////////////////////\n\nconst ROOT_PROTOTYPE = Object.create(null)\n\n// global bus shared by all SXCs\n// TODO should be injected instead?\nROOT_PROTOTYPE.emitter = new EventEmitter()\n\n// common functions\n\n// because we often set the same details\nROOT_PROTOTYPE.setAnalyticsAndErrorDetails = function setAnalyticsAndErrorDetails(details = {}) {\n\tconst SXC = this\n\treturn SXC\n\t\t.setAnalyticsDetails(details)\n\t\t.setErrorDetails(details)\n}\n\n/////////////////////\n\nexport {\n\tROOT_PROTOTYPE,\n}\n","import {anyMap, producersMap, eventsMap} from './maps.js';\n\nconst anyProducer = Symbol('anyProducer');\nconst resolvedPromise = Promise.resolve();\n\n// Define symbols for \"meta\" events.\nconst listenerAdded = Symbol('listenerAdded');\nconst listenerRemoved = Symbol('listenerRemoved');\n\nlet canEmitMetaEvents = false;\nlet isGlobalDebugEnabled = false;\n\nconst isEventKeyType = key => typeof key === 'string' || typeof key === 'symbol' || typeof key === 'number';\n\nfunction assertEventName(eventName) {\n\tif (!isEventKeyType(eventName)) {\n\t\tthrow new TypeError('`eventName` must be a string, symbol, or number');\n\t}\n}\n\nfunction assertListener(listener) {\n\tif (typeof listener !== 'function') {\n\t\tthrow new TypeError('listener must be a function');\n\t}\n}\n\nfunction getListeners(instance, eventName) {\n\tconst events = eventsMap.get(instance);\n\tif (!events.has(eventName)) {\n\t\treturn;\n\t}\n\n\treturn events.get(eventName);\n}\n\nfunction getEventProducers(instance, eventName) {\n\tconst key = isEventKeyType(eventName) ? eventName : anyProducer;\n\tconst producers = producersMap.get(instance);\n\tif (!producers.has(key)) {\n\t\treturn;\n\t}\n\n\treturn producers.get(key);\n}\n\nfunction enqueueProducers(instance, eventName, eventData) {\n\tconst producers = producersMap.get(instance);\n\tif (producers.has(eventName)) {\n\t\tfor (const producer of producers.get(eventName)) {\n\t\t\tproducer.enqueue(eventData);\n\t\t}\n\t}\n\n\tif (producers.has(anyProducer)) {\n\t\tconst item = Promise.all([eventName, eventData]);\n\t\tfor (const producer of producers.get(anyProducer)) {\n\t\t\tproducer.enqueue(item);\n\t\t}\n\t}\n}\n\nfunction iterator(instance, eventNames) {\n\teventNames = Array.isArray(eventNames) ? eventNames : [eventNames];\n\n\tlet isFinished = false;\n\tlet flush = () => {};\n\tlet queue = [];\n\n\tconst producer = {\n\t\tenqueue(item) {\n\t\t\tqueue.push(item);\n\t\t\tflush();\n\t\t},\n\t\tfinish() {\n\t\t\tisFinished = true;\n\t\t\tflush();\n\t\t},\n\t};\n\n\tfor (const eventName of eventNames) {\n\t\tlet set = getEventProducers(instance, eventName);\n\t\tif (!set) {\n\t\t\tset = new Set();\n\t\t\tconst producers = producersMap.get(instance);\n\t\t\tproducers.set(eventName, set);\n\t\t}\n\n\t\tset.add(producer);\n\t}\n\n\treturn {\n\t\tasync next() {\n\t\t\tif (!queue) {\n\t\t\t\treturn {done: true};\n\t\t\t}\n\n\t\t\tif (queue.length === 0) {\n\t\t\t\tif (isFinished) {\n\t\t\t\t\tqueue = undefined;\n\t\t\t\t\treturn this.next();\n\t\t\t\t}\n\n\t\t\t\tawait new Promise(resolve => {\n\t\t\t\t\tflush = resolve;\n\t\t\t\t});\n\n\t\t\t\treturn this.next();\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdone: false,\n\t\t\t\tvalue: await queue.shift(),\n\t\t\t};\n\t\t},\n\n\t\tasync return(value) {\n\t\t\tqueue = undefined;\n\n\t\t\tfor (const eventName of eventNames) {\n\t\t\t\tconst set = getEventProducers(instance, eventName);\n\t\t\t\tif (set) {\n\t\t\t\t\tset.delete(producer);\n\t\t\t\t\tif (set.size === 0) {\n\t\t\t\t\t\tconst producers = producersMap.get(instance);\n\t\t\t\t\t\tproducers.delete(eventName);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tflush();\n\n\t\t\treturn arguments.length > 0\n\t\t\t\t? {done: true, value: await value}\n\t\t\t\t: {done: true};\n\t\t},\n\n\t\t[Symbol.asyncIterator]() {\n\t\t\treturn this;\n\t\t},\n\t};\n}\n\nfunction defaultMethodNamesOrAssert(methodNames) {\n\tif (methodNames === undefined) {\n\t\treturn allEmitteryMethods;\n\t}\n\n\tif (!Array.isArray(methodNames)) {\n\t\tthrow new TypeError('`methodNames` must be an array of strings');\n\t}\n\n\tfor (const methodName of methodNames) {\n\t\tif (!allEmitteryMethods.includes(methodName)) {\n\t\t\tif (typeof methodName !== 'string') {\n\t\t\t\tthrow new TypeError('`methodNames` element must be a string');\n\t\t\t}\n\n\t\t\tthrow new Error(`${methodName} is not Emittery method`);\n\t\t}\n\t}\n\n\treturn methodNames;\n}\n\nconst isMetaEvent = eventName => eventName === listenerAdded || eventName === listenerRemoved;\n\nfunction emitMetaEvent(emitter, eventName, eventData) {\n\tif (isMetaEvent(eventName)) {\n\t\ttry {\n\t\t\tcanEmitMetaEvents = true;\n\t\t\temitter.emit(eventName, eventData);\n\t\t} finally {\n\t\t\tcanEmitMetaEvents = false;\n\t\t}\n\t}\n}\n\nexport default class Emittery {\n\tstatic mixin(emitteryPropertyName, methodNames) {\n\t\tmethodNames = defaultMethodNamesOrAssert(methodNames);\n\t\treturn target => {\n\t\t\tif (typeof target !== 'function') {\n\t\t\t\tthrow new TypeError('`target` must be function');\n\t\t\t}\n\n\t\t\tfor (const methodName of methodNames) {\n\t\t\t\tif (target.prototype[methodName] !== undefined) {\n\t\t\t\t\tthrow new Error(`The property \\`${methodName}\\` already exists on \\`target\\``);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction getEmitteryProperty() {\n\t\t\t\tObject.defineProperty(this, emitteryPropertyName, {\n\t\t\t\t\tenumerable: false,\n\t\t\t\t\tvalue: new Emittery(),\n\t\t\t\t});\n\t\t\t\treturn this[emitteryPropertyName];\n\t\t\t}\n\n\t\t\tObject.defineProperty(target.prototype, emitteryPropertyName, {\n\t\t\t\tenumerable: false,\n\t\t\t\tget: getEmitteryProperty,\n\t\t\t});\n\n\t\t\tconst emitteryMethodCaller = methodName => function (...args) {\n\t\t\t\treturn this[emitteryPropertyName][methodName](...args);\n\t\t\t};\n\n\t\t\tfor (const methodName of methodNames) {\n\t\t\t\tObject.defineProperty(target.prototype, methodName, {\n\t\t\t\t\tenumerable: false,\n\t\t\t\t\tvalue: emitteryMethodCaller(methodName),\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn target;\n\t\t};\n\t}\n\n\tstatic get isDebugEnabled() {\n\t\t// In a browser environment, `globalThis.process` can potentially reference a DOM Element with a `#process` ID,\n\t\t// so instead of just type checking `globalThis.process`, we need to make sure that `globalThis.process.env` exists.\n\t\t// eslint-disable-next-line n/prefer-global/process\n\t\tif (typeof globalThis.process?.env !== 'object') {\n\t\t\treturn isGlobalDebugEnabled;\n\t\t}\n\n\t\t// eslint-disable-next-line n/prefer-global/process\n\t\tconst {env} = globalThis.process ?? {env: {}};\n\t\treturn env.DEBUG === 'emittery' || env.DEBUG === '*' || isGlobalDebugEnabled;\n\t}\n\n\tstatic set isDebugEnabled(newValue) {\n\t\tisGlobalDebugEnabled = newValue;\n\t}\n\n\tconstructor(options = {}) {\n\t\tanyMap.set(this, new Set());\n\t\teventsMap.set(this, new Map());\n\t\tproducersMap.set(this, new Map());\n\n\t\tproducersMap.get(this).set(anyProducer, new Set());\n\n\t\tthis.debug = options.debug ?? {};\n\n\t\tif (this.debug.enabled === undefined) {\n\t\t\tthis.debug.enabled = false;\n\t\t}\n\n\t\tif (!this.debug.logger) {\n\t\t\tthis.debug.logger = (type, debugName, eventName, eventData) => {\n\t\t\t\ttry {\n\t\t\t\t\t// TODO: Use https://github.com/sindresorhus/safe-stringify when the package is more mature. Just copy-paste the code.\n\t\t\t\t\teventData = JSON.stringify(eventData);\n\t\t\t\t} catch {\n\t\t\t\t\teventData = `Object with the following keys failed to stringify: ${Object.keys(eventData).join(',')}`;\n\t\t\t\t}\n\n\t\t\t\tif (typeof eventName === 'symbol' || typeof eventName === 'number') {\n\t\t\t\t\teventName = eventName.toString();\n\t\t\t\t}\n\n\t\t\t\tconst currentTime = new Date();\n\t\t\t\tconst logTime = `${currentTime.getHours()}:${currentTime.getMinutes()}:${currentTime.getSeconds()}.${currentTime.getMilliseconds()}`;\n\t\t\t\tconsole.log(`[${logTime}][emittery:${type}][${debugName}] Event Name: ${eventName}\\n\\tdata: ${eventData}`);\n\t\t\t};\n\t\t}\n\t}\n\n\tlogIfDebugEnabled(type, eventName, eventData) {\n\t\tif (Emittery.isDebugEnabled || this.debug.enabled) {\n\t\t\tthis.debug.logger(type, this.debug.name, eventName, eventData);\n\t\t}\n\t}\n\n\ton(eventNames, listener) {\n\t\tassertListener(listener);\n\n\t\teventNames = Array.isArray(eventNames) ? eventNames : [eventNames];\n\t\tfor (const eventName of eventNames) {\n\t\t\tassertEventName(eventName);\n\t\t\tlet set = getListeners(this, eventName);\n\t\t\tif (!set) {\n\t\t\t\tset = new Set();\n\t\t\t\tconst events = eventsMap.get(this);\n\t\t\t\tevents.set(eventName, set);\n\t\t\t}\n\n\t\t\tset.add(listener);\n\n\t\t\tthis.logIfDebugEnabled('subscribe', eventName, undefined);\n\n\t\t\tif (!isMetaEvent(eventName)) {\n\t\t\t\temitMetaEvent(this, listenerAdded, {eventName, listener});\n\t\t\t}\n\t\t}\n\n\t\treturn this.off.bind(this, eventNames, listener);\n\t}\n\n\toff(eventNames, listener) {\n\t\tassertListener(listener);\n\n\t\teventNames = Array.isArray(eventNames) ? eventNames : [eventNames];\n\t\tfor (const eventName of eventNames) {\n\t\t\tassertEventName(eventName);\n\t\t\tconst set = getListeners(this, eventName);\n\t\t\tif (set) {\n\t\t\t\tset.delete(listener);\n\t\t\t\tif (set.size === 0) {\n\t\t\t\t\tconst events = eventsMap.get(this);\n\t\t\t\t\tevents.delete(eventName);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.logIfDebugEnabled('unsubscribe', eventName, undefined);\n\n\t\t\tif (!isMetaEvent(eventName)) {\n\t\t\t\temitMetaEvent(this, listenerRemoved, {eventName, listener});\n\t\t\t}\n\t\t}\n\t}\n\n\tonce(eventNames) {\n\t\tlet off_;\n\n\t\tconst promise = new Promise(resolve => {\n\t\t\toff_ = this.on(eventNames, data => {\n\t\t\t\toff_();\n\t\t\t\tresolve(data);\n\t\t\t});\n\t\t});\n\n\t\tpromise.off = off_;\n\t\treturn promise;\n\t}\n\n\tevents(eventNames) {\n\t\teventNames = Array.isArray(eventNames) ? eventNames : [eventNames];\n\t\tfor (const eventName of eventNames) {\n\t\t\tassertEventName(eventName);\n\t\t}\n\n\t\treturn iterator(this, eventNames);\n\t}\n\n\tasync emit(eventName, eventData) {\n\t\tassertEventName(eventName);\n\n\t\tif (isMetaEvent(eventName) && !canEmitMetaEvents) {\n\t\t\tthrow new TypeError('`eventName` cannot be meta event `listenerAdded` or `listenerRemoved`');\n\t\t}\n\n\t\tthis.logIfDebugEnabled('emit', eventName, eventData);\n\n\t\tenqueueProducers(this, eventName, eventData);\n\n\t\tconst listeners = getListeners(this, eventName) ?? new Set();\n\t\tconst anyListeners = anyMap.get(this);\n\t\tconst staticListeners = [...listeners];\n\t\tconst staticAnyListeners = isMetaEvent(eventName) ? [] : [...anyListeners];\n\n\t\tawait resolvedPromise;\n\t\tawait Promise.all([\n\t\t\t...staticListeners.map(async listener => {\n\t\t\t\tif (listeners.has(listener)) {\n\t\t\t\t\treturn listener(eventData);\n\t\t\t\t}\n\t\t\t}),\n\t\t\t...staticAnyListeners.map(async listener => {\n\t\t\t\tif (anyListeners.has(listener)) {\n\t\t\t\t\treturn listener(eventName, eventData);\n\t\t\t\t}\n\t\t\t}),\n\t\t]);\n\t}\n\n\tasync emitSerial(eventName, eventData) {\n\t\tassertEventName(eventName);\n\n\t\tif (isMetaEvent(eventName) && !canEmitMetaEvents) {\n\t\t\tthrow new TypeError('`eventName` cannot be meta event `listenerAdded` or `listenerRemoved`');\n\t\t}\n\n\t\tthis.logIfDebugEnabled('emitSerial', eventName, eventData);\n\n\t\tconst listeners = getListeners(this, eventName) ?? new Set();\n\t\tconst anyListeners = anyMap.get(this);\n\t\tconst staticListeners = [...listeners];\n\t\tconst staticAnyListeners = [...anyListeners];\n\n\t\tawait resolvedPromise;\n\t\t/* eslint-disable no-await-in-loop */\n\t\tfor (const listener of staticListeners) {\n\t\t\tif (listeners.has(listener)) {\n\t\t\t\tawait listener(eventData);\n\t\t\t}\n\t\t}\n\n\t\tfor (const listener of staticAnyListeners) {\n\t\t\tif (anyListeners.has(listener)) {\n\t\t\t\tawait listener(eventName, eventData);\n\t\t\t}\n\t\t}\n\t\t/* eslint-enable no-await-in-loop */\n\t}\n\n\tonAny(listener) {\n\t\tassertListener(listener);\n\n\t\tthis.logIfDebugEnabled('subscribeAny', undefined, undefined);\n\n\t\tanyMap.get(this).add(listener);\n\t\temitMetaEvent(this, listenerAdded, {listener});\n\t\treturn this.offAny.bind(this, listener);\n\t}\n\n\tanyEvent() {\n\t\treturn iterator(this);\n\t}\n\n\toffAny(listener) {\n\t\tassertListener(listener);\n\n\t\tthis.logIfDebugEnabled('unsubscribeAny', undefined, undefined);\n\n\t\temitMetaEvent(this, listenerRemoved, {listener});\n\t\tanyMap.get(this).delete(listener);\n\t}\n\n\tclearListeners(eventNames) {\n\t\teventNames = Array.isArray(eventNames) ? eventNames : [eventNames];\n\n\t\tfor (const eventName of eventNames) {\n\t\t\tthis.logIfDebugEnabled('clear', eventName, undefined);\n\n\t\t\tif (isEventKeyType(eventName)) {\n\t\t\t\tconst set = getListeners(this, eventName);\n\t\t\t\tif (set) {\n\t\t\t\t\tset.clear();\n\t\t\t\t}\n\n\t\t\t\tconst producers = getEventProducers(this, eventName);\n\t\t\t\tif (producers) {\n\t\t\t\t\tfor (const producer of producers) {\n\t\t\t\t\t\tproducer.finish();\n\t\t\t\t\t}\n\n\t\t\t\t\tproducers.clear();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tanyMap.get(this).clear();\n\n\t\t\t\tfor (const [eventName, listeners] of eventsMap.get(this).entries()) {\n\t\t\t\t\tlisteners.clear();\n\t\t\t\t\teventsMap.get(this).delete(eventName);\n\t\t\t\t}\n\n\t\t\t\tfor (const [eventName, producers] of producersMap.get(this).entries()) {\n\t\t\t\t\tfor (const producer of producers) {\n\t\t\t\t\t\tproducer.finish();\n\t\t\t\t\t}\n\n\t\t\t\t\tproducers.clear();\n\t\t\t\t\tproducersMap.get(this).delete(eventName);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tlistenerCount(eventNames) {\n\t\teventNames = Array.isArray(eventNames) ? eventNames : [eventNames];\n\t\tlet count = 0;\n\n\t\tfor (const eventName of eventNames) {\n\t\t\tif (isEventKeyType(eventName)) {\n\t\t\t\tcount += anyMap.get(this).size\n\t\t\t\t\t+ (getListeners(this, eventName)?.size ?? 0)\n\t\t\t\t\t+ (getEventProducers(this, eventName)?.size ?? 0)\n\t\t\t\t\t+ (getEventProducers(this)?.size ?? 0);\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (eventName !== undefined) {\n\t\t\t\tassertEventName(eventName);\n\t\t\t}\n\n\t\t\tcount += anyMap.get(this).size;\n\n\t\t\tfor (const value of eventsMap.get(this).values()) {\n\t\t\t\tcount += value.size;\n\t\t\t}\n\n\t\t\tfor (const value of producersMap.get(this).values()) {\n\t\t\t\tcount += value.size;\n\t\t\t}\n\t\t}\n\n\t\treturn count;\n\t}\n\n\tbindMethods(target, methodNames) {\n\t\tif (typeof target !== 'object' || target === null) {\n\t\t\tthrow new TypeError('`target` must be an object');\n\t\t}\n\n\t\tmethodNames = defaultMethodNamesOrAssert(methodNames);\n\n\t\tfor (const methodName of methodNames) {\n\t\t\tif (target[methodName] !== undefined) {\n\t\t\t\tthrow new Error(`The property \\`${methodName}\\` already exists on \\`target\\``);\n\t\t\t}\n\n\t\t\tObject.defineProperty(target, methodName, {\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: this[methodName].bind(this),\n\t\t\t});\n\t\t}\n\t}\n}\n\nconst allEmitteryMethods = Object.getOwnPropertyNames(Emittery.prototype).filter(v => v !== 'constructor');\n\nObject.defineProperty(Emittery, 'listenerAdded', {\n\tvalue: listenerAdded,\n\twritable: false,\n\tenumerable: true,\n\tconfigurable: false,\n});\nObject.defineProperty(Emittery, 'listenerRemoved', {\n\tvalue: listenerRemoved,\n\twritable: false,\n\tenumerable: true,\n\tconfigurable: false,\n});\n","export const anyMap = new WeakMap();\nexport const eventsMap = new WeakMap();\nexport const producersMap = new WeakMap();\n","// Note: let's keep everything immutable\n\n/////////////////////\n\nlet instance_count = 0\nfunction create(parent_state) {\n\treturn {\n\t\tsid: instance_count++, // not really useful yet, but helps debug\n\t\tparent: parent_state || null,\n\t\tplugins: {},\n\t\tcache: {}, // per-SXC cache for complex computations\n\t}\n}\n\nfunction activate_plugin(state, PLUGIN/*, args*/) {\n\tconst plugin_parent_state = state.parent\n\t\t? state.parent.plugins[PLUGIN.id]\n\t\t: null\n\n\tconst plugin_state = PLUGIN.state.create(plugin_parent_state)\n\n\treturn {\n\t\t...state,\n\t\tplugins: {\n\t\t\t...state.plugins,\n\t\t\t[PLUGIN.id]: {\n\t\t\t\t...plugin_state,\n\t\t\t\tsid: state.sid, // propagate sid. Not really useful yet, but helps debug\n\t\t\t},\n\t\t},\n\t}\n}\n\nfunction reduce_plugin(state, PLUGIN_ID, reducer) {\n\tconst initial_plugin_state = state.plugins[PLUGIN_ID]\n\tconst new_plugin_state = reducer(initial_plugin_state)\n\n\tif (new_plugin_state === initial_plugin_state)\n\t\treturn state // no change (immutability expected)\n\n\treturn {\n\t\t...state,\n\t\tplugins: {\n\t\t\t...state.plugins,\n\t\t\t[PLUGIN_ID]: new_plugin_state,\n\t\t},\n\t}\n}\n\n/////////////////////\n\nexport {\n\tcreate,\n\tactivate_plugin,\n\treduce_plugin,\n}\n","import { PLUGIN as PLUGIN_LOGICAL_STACK } from './logical-stack/index.js'\nimport { PLUGIN as PLUGIN_DI } from './dependency-injection/index.js'\nimport { PLUGIN as PLUGIN_ERROR_HANDLING } from './error-handling/index.js'\nimport { PLUGIN as PLUGIN_ANALYTICS } from './analytics/index.js'\n\n\nconst PLUGINS_BY_ID = {\n\t[PLUGIN_ANALYTICS]: PLUGIN_ANALYTICS,\n\t[PLUGIN_LOGICAL_STACK.id]: PLUGIN_LOGICAL_STACK,\n\t[PLUGIN_DI.id]: PLUGIN_DI,\n\t[PLUGIN_ERROR_HANDLING.id]: PLUGIN_ERROR_HANDLING,\n}\n\nconst PLUGINS = Object.values(PLUGINS_BY_ID)\n\nexport {\n\tPLUGINS_BY_ID,\n\tPLUGINS,\n}\n","\nimport { INTERNAL_PROP } from '../../consts.js'\nimport * as TopState from '../../state.js'\nimport {\n\tLOGICAL_STACK_BEGIN_MARKER,\n\tLOGICAL_STACK_END_MARKER,\n\tLOGICAL_STACK_SEPARATOR,\n\tLOGICAL_STACK_OPERATION_MARKER,\n\tLOGICAL_STACK_SEPARATOR_NON_ADJACENT,\n} from './consts.js'\nimport * as State from './state.js'\nimport { _getSXCStatePath } from '../../utils.js'\n\nconst PLUGIN_ID = 'logical_stack'\n\nconst BRANCH_JUMP_PSEUDO_STATE = {\n\tsid: -1,\n\tplugins: {\n\t\t[PLUGIN_ID]: {\n\t\t\tstack: {\n\t\t\t\t// NO module\n\t\t\t\toperation: LOGICAL_STACK_SEPARATOR_NON_ADJACENT,\n\t\t\t},\n\t\t},\n\t},\n}\n\nfunction _reduceStatePathToLogicalStack(statePath) {\n\tlet current_module = null\n\treturn statePath.reduce((res, state) => {\n\t\tconst {module, operation} = state.plugins[PLUGIN_ID].stack\n\n\t\tif (module // check existence of module due to special case \"BRANCH_JUMP_PSEUDO_STATE\" above\n\t\t\t&& module !== current_module\n\t\t) {\n\t\t\tres = res\n\t\t\t\t+ (res.length ? LOGICAL_STACK_SEPARATOR : '')\n\t\t\t\t+ module\n\t\t\tcurrent_module = module\n\t\t}\n\n\t\tif (operation)\n\t\t\tres = res\n\t\t\t\t+ LOGICAL_STACK_SEPARATOR\n\t\t\t\t+ operation\n\t\t\t\t+ LOGICAL_STACK_OPERATION_MARKER\n\n\t\treturn res\n\t}, '') + LOGICAL_STACK_END_MARKER\n}\n\nconst PLUGIN = {\n\tid: PLUGIN_ID,\n\tstate: State,\n\taugment: prototype => {\n\n\t\tprototype.setLogicalStack = function setLogicalStack({module, operation}) {\n\t\t\tconst SXC = this\n\t\t\tlet root_state = SXC[INTERNAL_PROP]\n\n\t\t\troot_state = TopState.reduce_plugin(root_state, PLUGIN_ID, state => {\n\t\t\t\tif (module)\n\t\t\t\t\tstate = State.set_module(state, module)\n\t\t\t\tif (operation)\n\t\t\t\t\tstate = State.set_operation(state, operation)\n\n\t\t\t\treturn state\n\t\t\t})\n\n\t\t\tSXC[INTERNAL_PROP] = root_state\n\n\t\t\treturn SXC\n\t\t}\n\n\t\tprototype.getLogicalStack = function getLogicalStack() {\n\t\t\tconst SXC = this\n\n\t\t\treturn _reduceStatePathToLogicalStack(\n\t\t\t\t_getSXCStatePath(SXC),\n\t\t\t)\n\t\t}\n\n\t\tprototype.getShortLogicalStack = function get_stack_end() {\n\t\t\tconst { stack } = this[INTERNAL_PROP].plugins[PLUGIN_ID]\n\t\t\treturn LOGICAL_STACK_BEGIN_MARKER\n\t\t\t\t+ stack.module\n\t\t\t\t+ LOGICAL_STACK_SEPARATOR_NON_ADJACENT //LOGICAL_STACK_SEPARATOR\n\t\t\t\t+ stack.operation\n\t\t\t\t+ LOGICAL_STACK_OPERATION_MARKER\n\t\t\t\t+ LOGICAL_STACK_END_MARKER\n\t\t}\n\n\t\t// internal only\n\t\t// expects an already normalized error (through @offirmo/error-utils)\n\t\tprototype._decorateErrorWithLogicalStack = function _decorateErrorWithLogicalStack(err) {\n\t\t\tconst SXC = this\n\n\t\t\terr._temp = err._temp || {}\n\t\t\terr.details = err.details || {}\n\n\t\t\tconst logicalStack = {\n\t\t\t\tfull: SXC.getLogicalStack(),\n\t\t\t}\n\n\t\t\tif (err._temp.SXC) {\n\t\t\t\t// OK this error is already decorated.\n\t\t\t\t// Thus the message is also already decorated, don't touch it.\n\n\t\t\t\t// BUT we may be able to add more info, can we?\n\t\t\t\tif (err.details.logicalStack.includes(logicalStack.full)) {\n\t\t\t\t\t// ok, logical stack already chained, nothing to add\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// SXC chain has branched, reconcile paths\n\t\t\t\t\t// OK maybe overkill...\n\t\t\t\t\tconst other_path = err._temp.statePath\n\t\t\t\t\tconst current_path = _getSXCStatePath(SXC)\n\n\t\t\t\t\t// find common path\n\t\t\t\t\tlet last_common_index = 0\n\t\t\t\t\tfor (let i = 1; i < current_path.length; ++i) {\n\t\t\t\t\t\tif (other_path[i] !== current_path[i])\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tlast_common_index = i\n\t\t\t\t\t}\n\n\t\t\t\t\t// reconcile the 2 stack traces\n\t\t\t\t\tlet improvedStatePath = [].concat(current_path)\n\t\t\t\t\timprovedStatePath.push(BRANCH_JUMP_PSEUDO_STATE)\n\t\t\t\t\timprovedStatePath = improvedStatePath.concat(\n\t\t\t\t\t\tother_path.slice(last_common_index + 1),\n\t\t\t\t\t)\n\n\t\t\t\t\terr._temp.statePath = improvedStatePath\n\t\t\t\t\terr.details.logicalStack = _reduceStatePathToLogicalStack(improvedStatePath)\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\terr._temp.SXC = SXC\n\t\t\t\terr._temp.statePath = _getSXCStatePath(SXC)\n\n\t\t\t\tlogicalStack.short = SXC.getShortLogicalStack()\n\t\t\t\tif (err.message.startsWith(logicalStack.short)) {\n\t\t\t\t\t// can that happen??? It's a bug!\n\t\t\t\t\t/* eslint-disable no-console */\n\t\t\t\t\tconsole.warn('UNEXPECTED SXC non-decorated error already prefixed??')\n\t\t\t\t\t/* eslint-enable no-console */\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst original_message = err.message\n\t\t\t\t\terr.message = logicalStack.short + ': ' + original_message\n\t\t\t\t\tconst expected_first_line_of_the_stack = `${err.name}: ${original_message}`\n\t\t\t\t\tif (err.stack?.startsWith(expected_first_line_of_the_stack))\n\t\t\t\t\t\terr.stack = `${err.name}: ${err.message}` + err.stack.slice(expected_first_line_of_the_stack.length)\n\t\t\t\t}\n\n\t\t\t\terr.details.logicalStack = logicalStack.full\n\t\t\t}\n\n\t\t\treturn err\n\t\t}\n\t},\n}\n\nexport {\n\tPLUGIN,\n}\n","\nconst LOGICAL_STACK_BEGIN_MARKER = ''\nconst LOGICAL_STACK_END_MARKER = ''\n\nconst LOGICAL_STACK_SEPARATOR = '›'\n// '⋅' '↘' ':' '•' '›'\n\nconst LOGICAL_STACK_MODULE_MARKER = ''\n\nconst LOGICAL_STACK_OPERATION_MARKER = ''\n// '…'\n\nconst LOGICAL_STACK_SEPARATOR_NON_ADJACENT = '…'\n\nexport {\n\tLOGICAL_STACK_BEGIN_MARKER,\n\tLOGICAL_STACK_END_MARKER,\n\tLOGICAL_STACK_MODULE_MARKER,\n\tLOGICAL_STACK_SEPARATOR,\n\tLOGICAL_STACK_OPERATION_MARKER,\n\tLOGICAL_STACK_SEPARATOR_NON_ADJACENT,\n}\n","\n/////////////////////\n\nfunction create(parent_state) {\n\tconst stack = parent_state\n\t\t? Object.create(parent_state.stack)\n\t\t: (() => {\n\t\t\tconst stack = Object.create(null)\n\t\t\tstack.module = undefined\n\t\t\treturn stack\n\t\t})()\n\n\tstack.operation = undefined // should never inherit this one\n\n\treturn {\n\t\tstack,\n\t}\n}\n\nfunction set_module(state, module) {\n\tconst { stack } = state\n\n\tif (stack.module === module)\n\t\treturn state\n\n\tstack.module = module\n\n\treturn {\n\t\t...state,\n\t\tstack,\n\t}\n}\n\nfunction set_operation(state, operation) {\n\tconst { stack } = state\n\n\tif (stack.operation === operation)\n\t\treturn state\n\n\tstack.operation = operation\n\n\treturn {\n\t\t...state,\n\t\tstack,\n\t}\n}\n\nexport {\n\tcreate,\n\tset_module,\n\tset_operation,\n}\n","import { INTERNAL_PROP } from './consts.js'\n\nfunction flattenToOwn(object) {\n\tif (!object) return object\n\tif (Array.isArray(object)) return object\n\tif (typeof object !== 'object') return object\n\n\tconst res = Object.create(null)\n\n\tfor (const property in object) {\n\t\tres[property] = object[property]\n\t}\n\n\treturn res\n}\n\n// needed for various tree traversal algorithms\nfunction _getSXCStatePath(SXC) {\n\tif (!SXC[INTERNAL_PROP].cache.statePath) {\n\t\tconst path = []\n\t\tlet state = SXC[INTERNAL_PROP]\n\n\t\twhile (state) {\n\t\t\tpath.unshift(state)\n\t\t\tstate = state.parent\n\t\t}\n\n\t\tSXC[INTERNAL_PROP].cache.statePath = path\n\t}\n\n\treturn SXC[INTERNAL_PROP].cache.statePath\n}\n\n// for debug\nfunction _flattenSXC(SXC) {\n\tconst plugins = {\n\t\t...SXC[INTERNAL_PROP].plugins,\n\t}\n\n\tplugins.analytics.details = flattenToOwn(\n\t\tplugins.analytics.details,\n\t)\n\n\tplugins.dependency_injection.context = flattenToOwn(\n\t\tplugins.dependency_injection.context,\n\t)\n\n\tplugins.error_handling.details = flattenToOwn(\n\t\tplugins.error_handling.details,\n\t)\n\n\tplugins.logical_stack.stack = flattenToOwn(\n\t\tplugins.logical_stack.stack,\n\t)\n\n\treturn plugins\n}\n\nexport {\n\tflattenToOwn,\n\t_getSXCStatePath,\n\t_flattenSXC,\n}\n","import { INTERNAL_PROP } from '../../consts.js'\nimport * as TopState from '../../state.js'\nimport * as State from './state.js'\nimport { flattenToOwn } from '../../utils.js'\n\nconst PLUGIN_ID = 'dependency_injection'\n\nconst PLUGIN = {\n\tid: PLUGIN_ID,\n\tstate: State,\n\taugment: prototype => {\n\n\t\tprototype.injectDependencies = function injectDependencies(deps) {\n\t\t\tlet root_state = this[INTERNAL_PROP]\n\n\t\t\troot_state = TopState.reduce_plugin(root_state, PLUGIN_ID, state => {\n\t\t\t\tObject.entries(deps).forEach(([key, value]) => {\n\t\t\t\t\tstate = State.injectDependencies(state, key, value)\n\t\t\t\t})\n\t\t\t\treturn state\n\t\t\t})\n\n\t\t\tthis[INTERNAL_PROP] = root_state\n\n\t\t\treturn this // for chaining\n\t\t}\n\n\t\tprototype.getInjectedDependencies = function getInjectedDependencies() {\n\t\t\tconst plugin_state = this[INTERNAL_PROP].plugins[PLUGIN_ID]\n\n\t\t\treturn flattenToOwn(plugin_state.context)\n\t\t}\n\n\t},\n}\n\nexport {\n\tPLUGIN_ID,\n\tPLUGIN,\n}\n","\nfunction create(parent_state) {\n\tconst context = parent_state\n\t\t? Object.create(parent_state.context)\n\t\t: Object.create(null) // NO auto-injections here, let's keep it simple. See core & common\n\n\treturn {\n\t\tcontext,\n\t}\n}\n\nfunction injectDependencies(state, key, value) {\n\tconst { context } = state\n\n\tcontext[key] = value\n\n\treturn {\n\t\t...state,\n\t\tcontext,\n\t}\n}\n\n/////////////////////\n\nexport {\n\tcreate,\n\tinjectDependencies,\n}\n","import { promiseTry } from '@offirmo-private/promise-try'\nimport { getꓽUTC_timestamp‿ms } from '@offirmo-private/timestamps'\nimport { createError as _createError, normalizeError } from '@offirmo/error-utils'\n\n\nimport { INTERNAL_PROP } from '../../consts.js'\nimport { flattenToOwn } from '../../utils.js'\nimport * as State from './state.js'\nimport { _create_catcher } from './catch-factory.js'\nimport { PLUGIN_ID as ID_DI } from '../dependency-injection/index.js'\nimport * as TopState from '../../state.js'\n\nconst PLUGIN_ID = 'error_handling'\n\nfunction _clean_temp(err) {\n\tdelete err._temp\n\treturn err\n}\n\nfunction _handleError({SXC, debugId = '?', shouldRethrow = true}, err) {\n\t_create_catcher({\n\t\tdebugId,\n\t\tdecorators: [\n\t\t\terr => normalizeError(err, { alwaysRecreate: true }),\n\t\t\terr => SXC._decorateErrorWithLogicalStack(err),\n\t\t\terr => SXC._decorateErrorWithDetails(err),\n\t\t],\n\t\tonError: shouldRethrow\n\t\t\t? null\n\t\t\t: err => SXC.emitter.emit('final-error', { SXC, err: _clean_temp(err) }),\n\t})(err)\n}\n\nconst PLUGIN = {\n\tid: PLUGIN_ID,\n\tstate: State,\n\taugment: prototype => {\n\n\t\tprototype._decorateErrorWithDetails = function _decorateErrorWithDetails(err) {\n\t\t\tconst SXC = this\n\t\t\tconst state = SXC[INTERNAL_PROP]\n\t\t\tconst now = getꓽUTC_timestamp‿ms()\n\n\t\t\tconst autoDetails = {\n\t\t\t\tENV: state.plugins[ID_DI].context.ENV,\n\t\t\t\tTIME: now,\n\t\t\t\tSESSION_DURATION_MS: now - state.plugins[ID_DI].context.SESSION_START_TIME_MS,\n\t\t\t}\n\t\t\tconst userDetails = flattenToOwn(state.plugins[PLUGIN_ID].details)\n\t\t\terr.details = {\n\t\t\t\t...autoDetails,\n\t\t\t\t...userDetails,\n\t\t\t\t...(err.details || {}),\n\t\t\t}\n\n\t\t\treturn err\n\t\t}\n\n\t\tprototype.setErrorDetails = function setErrorDetails(details) {\n\t\t\tconst SXC = this\n\t\t\tlet root_state = SXC[INTERNAL_PROP]\n\n\t\t\troot_state = TopState.reduce_plugin(root_state, PLUGIN_ID, plugin_state => {\n\t\t\t\tObject.entries(details).forEach(([key, value]) => {\n\t\t\t\t\tplugin_state = State.addDetail(plugin_state, key, value)\n\t\t\t\t})\n\t\t\t\treturn plugin_state\n\t\t\t})\n\n\t\t\tthis[INTERNAL_PROP] = root_state\n\n\t\t\treturn SXC // for chaining\n\t\t}\n\t\t// this getter should normally not be used, errors are automatically decorated\n\t\tprototype.getErrorDetails = function getErrorDetails() {\n\t\t\tconst SXC = this\n\t\t\tconst plugin_state = SXC[INTERNAL_PROP].plugins[PLUGIN_ID]\n\n\t\t\treturn flattenToOwn(plugin_state.details)\n\t\t}\n\n\t\t// useful if creating an error later from a saved SXC, ex. from a pipeline\n\t\tprototype.createError = function createError(message, details = {}) {\n\t\t\tconst SXC = this\n\t\t\tconst err = _createError(message, details)\n\t\t\terr.framesToPop = (err.framesToPop || 0) + 1\n\n\t\t\treturn SXC._decorateErrorWithLogicalStack(\n\t\t\t\tSXC._decorateErrorWithDetails(err)\n\t\t\t)\n\t\t}\n\n\t\t// for termination promises\n\t\tprototype.handleError = function handleError(err, debugId) {\n\t\t\tconst SXC = this\n\t\t\t_handleError({\n\t\t\t\tSXC,\n\t\t\t\tdebugId,\n\t\t\t\tshouldRethrow: false,\n\t\t\t}, err)\n\t\t}\n\n\t\tprototype.xTry = function xTry(operation, fn) {\n\t\t\tconsole.assert(!!operation)\n\t\t\tconst SXC = this\n\t\t\t\t.createChild()\n\t\t\t\t.setLogicalStack({operation})\n\n\t\t\tconst params = SXC[INTERNAL_PROP].plugins[ID_DI].context\n\n\t\t\ttry {\n\t\t\t\treturn fn(params)\n\t\t\t}\n\t\t\tcatch (err) {\n\t\t\t\t_handleError({\n\t\t\t\t\tSXC,\n\t\t\t\t\tdebugId: 'xTry',\n\t\t\t\t\tshouldRethrow: true,\n\t\t\t\t}, err)\n\t\t\t}\n\t\t}\n\n\t\tprototype.xTryCatch = function xTryCatch(operation, fn) {\n\t\t\tconsole.assert(!!operation)\n\t\t\tconst SXC = this\n\t\t\t\t.createChild()\n\t\t\t\t.setLogicalStack({operation})\n\n\t\t\tconst params = SXC[INTERNAL_PROP].plugins[ID_DI].context\n\n\t\t\ttry {\n\t\t\t\treturn fn(params)\n\t\t\t}\n\t\t\tcatch (err) {\n\t\t\t\t_handleError({\n\t\t\t\t\tSXC,\n\t\t\t\t\tdebugId: 'xTryCatch',\n\t\t\t\t\tshouldRethrow: false,\n\t\t\t\t}, err)\n\t\t\t}\n\t\t}\n\n\t\tprototype.xNewPromise = function xPromise(operation, resolver_fn) {\n\t\t\tconsole.assert(!!operation)\n\t\t\tconst SXC = this\n\t\t\t\t.createChild()\n\t\t\t\t.setLogicalStack({operation})\n\n\t\t\tconst params = SXC[INTERNAL_PROP].plugins[ID_DI].context\n\n\t\t\treturn (new Promise(resolver_fn.bind(undefined, params)))\n\t\t\t\t.catch(err => {\n\t\t\t\t\t_handleError({\n\t\t\t\t\t\tSXC,\n\t\t\t\t\t\tdebugId: 'xPromise',\n\t\t\t\t\t\tshouldRethrow: true,\n\t\t\t\t\t}, err)\n\t\t\t\t})\n\t\t}\n\n\t\tprototype.xPromiseTry = function xPromiseTry(operation, fn) {\n\t\t\tconsole.assert(!!operation)\n\t\t\tconst SXC = this\n\t\t\t\t.createChild()\n\t\t\t\t.setLogicalStack({operation})\n\n\t\t\tconst params = SXC[INTERNAL_PROP].plugins[ID_DI].context\n\n\t\t\treturn promiseTry(() => fn(params))\n\t\t\t\t.catch(err => {\n\t\t\t\t\t_handleError({\n\t\t\t\t\t\tSXC,\n\t\t\t\t\t\tdebugId: 'xPromiseTry',\n\t\t\t\t\t\tshouldRethrow: true,\n\t\t\t\t\t}, err)\n\t\t\t\t})\n\t\t}\n\n\n\t},\n}\n\nexport {\n\tPLUGIN,\n}\n","\n// https://2ality.com/2017/08/promise-try.html#work-arounds\nexport default function promiseTry<T>(fn: () => T | PromiseLike<T>): Promise<T> {\n\treturn Promise.resolve().then(fn)\n}\n\nexport {\n\tpromiseTry,\n}\n","/* set of functions generating various timestamps as strings,\n * using either convenient or standardized formats.\n * the generators can optionally take the time as param or default to current time.\n */\n\n/////////////////////////////////////////////////\n\n// ex. 1542780045627\nexport type TimestampUTCMs = number\nexport function getꓽUTC_timestamp‿ms(now: Readonly<Date> = new Date()): TimestampUTCMs {\n\treturn +now\n}\n\n/////////////////////////////////////////////////\n// human readable timestamps\n// spec:\n// - human readable\n// - as short as possible\n\n// ex. 20181121\n// assumed side effect of being castable to a number with a sort property older < newer\nexport type HumanReadableTimestampUTCDays = string\nexport function getꓽUTC_timestampⵧhuman_readable‿days(now: Readonly<Date> = new Date()): HumanReadableTimestampUTCDays {\n\tconst YYYY = now.getUTCFullYear()\n\tconst MM = String(now.getUTCMonth() + 1).padStart(2, '0')\n\tconst DD = String(now.getUTCDate()).padStart(2, '0')\n\n\treturn `${YYYY}${MM}${DD}`\n}\n\n// ex. 20181121_06h00\nexport type HumanReadableTimestampUTCMinutes = string //`${HumanReadableTimestampUTCDays}_${string}h${string}`\nexport function getꓽUTC_timestampⵧhuman_readable‿minutes(now: Readonly<Date> = new Date()): HumanReadableTimestampUTCMinutes {\n\tconst hh = String(now.getUTCHours()).padStart(2, '0')\n\tconst mm = String(now.getUTCMinutes()).padStart(2, '0')\n\n\treturn getꓽUTC_timestampⵧhuman_readable‿days(now) + `_${hh}h${mm}`\n}\n\n// ex. 20190608_04h23m15\nexport type HumanReadableTimestampUTCSeconds = string //`${HumanReadableTimestampUTCMinutes}m${string}`\nexport function getꓽUTC_timestampⵧhuman_readable‿seconds(now: Readonly<Date> = new Date()): HumanReadableTimestampUTCSeconds {\n\tconst ss = String(now.getUTCSeconds()).padStart(2, '0')\n\n\treturn getꓽUTC_timestampⵧhuman_readable‿minutes(now) + `m${ss}`\n}\n\n// ex.      20181121_06h00m45s632\n// formerly 20181121_06h00+45.632\nexport type HumanReadableTimestampUTCMs = string //`${HumanReadableTimestampUTCSeconds}s${string}`\nexport function getꓽUTC_timestampⵧhuman_readable‿ms(now: Readonly<Date> = new Date()): HumanReadableTimestampUTCMs {\n\tconst mmm = String(now.getUTCMilliseconds()).padStart(3, '0')\n\n\treturn getꓽUTC_timestampⵧhuman_readable‿seconds(now) + `s${mmm}`\n}\n\n/////////////////////\n\n// ISO 8601 Extended Format. The format is as follows: YYYY-MM-DDTHH:mm:ss.sssZ\n// https://www.ecma-international.org/ecma-262/5.1/#sec-15.9.1.15\n// ex. 2024-03-21T21:45:08.686Z\nexport type ISO8601TimestampMs = string\nexport function getꓽISO8601ⵧextended‿ms(now: Readonly<Date> = new Date()): ISO8601TimestampMs {\n\treturn now.toISOString()\n}\n\n// ex. 2024-03-21T21:45\nexport type ISO8601TimestampSimplifiedMin = string\nexport function getꓽISO8601ⵧsimplified‿minutes(now: Readonly<Date> = new Date()): ISO8601TimestampSimplifiedMin {\n\treturn getꓽISO8601ⵧextended‿ms(now).slice(0, 16)\n}\n\n// ex. 2024-03-21\n// ex. https://developers.cloudflare.com/workers/configuration/compatibility-dates/\nexport type ISO8601TimestampSimplifiedDays = string\nexport function getꓽISO8601ⵧsimplified‿days(now: Readonly<Date> = new Date()): ISO8601TimestampSimplifiedDays {\n\treturn getꓽISO8601ⵧextended‿ms(now).slice(0, 10)\n}\n\n/////////////////////////////////////////////////\n\n// fun but unclear\n// https://space.stackexchange.com/questions/36628/utc-timestamp-format-for-launch-vehicles\n/*function getꓽspace_timestamp_ms(now: Readonly<Date> = new Date()): string {\n\tconst YYYY = now.getUTCFullYear()\n\tconst MM = now.getUTCMonth()\n\tconst DD = ('0' + now.getUTCDate()).slice(-2)\n\tconst hh = ('0' + now.getUTCHours()).slice(-2)\n\tconst mm = ('0' + now.getUTCMinutes()).slice(-2)\n\tconst ss = ('0' + now.getUTCSeconds()).slice(-2)\n\tconst mmm = ('00' + now.getUTCMilliseconds()).slice(-3)\n\n\treturn `${DD} ${hh}:${mm}:${ss}.${mmm}`\n}*/\n\n/////////////////////////////////////////////////\n\nexport const TEST_TIMESTAMP_MS = 1234567890 // useful for unit tests\n","export * from './types.js'\nexport * from './fields.js'\nexport * from './util--create.js'\nexport * from './util--normalize.js'\nexport * from './util--try-or-fallback.js'\n","// explanation of those fields is in ./fields.ts\n/////////////////////////////////////////////////\n\n// eXtended error\ninterface XError extends Error {\n\n\t// redefine the standard fields in case the target ES lib doesn't have all of them\n\tname: string\n\tmessage: string\n\tstack?: string\n\tcause?: XError | Error\n\terrors?: Array<XError | Error>\n\tsuppressed?: XError | Error\n\n\t// optional\n\tcode?: string\n\tstatusCode?: number\n\tshouldRedirect?: boolean\n\tframesToPop?: number\n}\n\ninterface XXError extends XError {\n\n\tcause?: XXError | XError | Error\n\terrors?: Array<XXError | XError | Error>\n\tsuppressed?: XXError | XError | Error\n\n\tdetails?: {\n\t\tlogicalStack?: string\n\t\t[k: string]: boolean | number | string | null | undefined\n\t}\n\n\t_temp?: {\n\t\tSXC?: any // Software eXecution Context (Offirmo private)\n\t\tstatePath?: string // idem\n\t\t[k: string]: any\n\t}\n}\n\nconst DEBUG = false\nconst DEMO_ERROR = new Error('[Test!]')\nfunction isꓽError(err_like: any): err_like is XXError {\n\tif (typeof err_like?.message !== 'string' || !err_like?.message) {\n\t\tDEBUG && console.error('hasErrorShape() BAD message', {\n\t\t\ttype: typeof err_like?.message,\n\t\t\texpected_type: typeof DEMO_ERROR?.message,\n\t\t\terr_like,\n\t\t})\n\t\treturn false\n\t}\n\n\tif (typeof err_like?.name !== 'string' || !err_like?.name) {\n\t\tDEBUG && console.error('hasErrorShape() BAD name', {\n\t\t\ttype: typeof err_like?.name,\n\t\t\texpected_type: typeof DEMO_ERROR?.name,\n\t\t\terr_like,\n\t\t})\n\t\treturn false\n\t}\n\n\tif (typeof err_like?.stack !== 'string') {\n\t\tDEBUG && console.error('hasErrorShape() BAD stack', {\n\t\t\ttype: typeof err_like?.stack,\n\t\t\texpected_type: typeof DEMO_ERROR?.stack,\n\t\t\terr_like,\n\t\t})\n\t\treturn false\n\t}\n\n\treturn true\n}\n\n/////////////////////////////////////////////////\n\nexport {\n\ttype XError,\n\ttype XXError,\n\n\tisꓽError,\n}\n","import { XError, XXError } from './types.js'\n\n/////////////////////////////////////////////////\n\n// order is important!\n// it may be used for display by other libs\n\nconst STRICT_STANDARD_ERROR_FIELDS = new Set<keyof XError>([\n\t// standard fields\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error/prototype\n\t'name', // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error/name\n\t'message', // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error/message\n\t'cause' // ES2022 https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error/cause\n\t        // see also https://devblogs.microsoft.com/typescript/announcing-typescript-4-8/#lib-d-ts-updates\n])\n\nconst QUASI_STANDARD_ERROR_FIELDS = new Set<keyof XError>([\n\t// first inherit from previous\n\t...STRICT_STANDARD_ERROR_FIELDS,\n\n\t// quasi-standard: followed by all browsers + node\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error/prototype\n\t'stack', // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error/Stack\n\n\t// ES2024\n\t// already supported in TypeScript https://devblogs.microsoft.com/typescript/announcing-typescript-5-2/#using-declarations-and-explicit-resource-management\n\t'suppressed',\n])\n\nconst COMMON_ERROR_FIELDS = new Set<keyof XError>([\n\t// first inherit from previous\n\t...QUASI_STANDARD_ERROR_FIELDS,\n\n\t// standard in node only:\n\t'code', // https://medium.com/the-node-js-collection/node-js-errors-changes-you-need-to-know-about-dc8c82417f65\n\t        // https://nodejs.org/dist/latest/docs/api/errors.html#errors_node_js_error_codes\n\n\t// standard in Firefox only for AggregateError:\n\t'errors', // https://devdocs.io/javascript/global_objects/aggregateerror\n\n\t// non-standard but widely used:\n\t'statusCode', // express, https://gist.github.com/zcaceres/2854ef613751563a3b506fabce4501fd\n\t'shouldRedirect', // express, https://gist.github.com/zcaceres/2854ef613751563a3b506fabce4501fd\n\t'framesToPop', // see facebook https://github.com/facebook/flux/blob/2.0.2/src/invariant.js\n])\n\n// TODO node has a lot of other fields https://nodejs.org/api/errors.html\n\nconst COMMON_ERROR_FIELDS_EXTENDED = new Set<keyof XXError>([\n\t// first inherit from previous\n\t...COMMON_ERROR_FIELDS,\n\n\t// My (Offirmo) extensions:\n\t'_temp', // used for passing state around during error handling\n\t'details', // hash to store any other property not defined in this set\n\n\t// TODO evaluate if need arises:\n\t// - triage field?\n\t// - timestamp?\n])\n\n/////////////////////////////////////////////////\n\nexport {\n\tSTRICT_STANDARD_ERROR_FIELDS,\n\tQUASI_STANDARD_ERROR_FIELDS,\n\tCOMMON_ERROR_FIELDS,\n\tCOMMON_ERROR_FIELDS_EXTENDED,\n}\n","import {\n\tXError,\n\tXXError\n} from './types.js'\n\nimport {\n\tCOMMON_ERROR_FIELDS_EXTENDED,\n} from './fields.js'\n\n/////////////////////////////////////////////////\n\nconst AUTOGENERATED_ERROR_FIELDS = new Set<keyof XError>([\n\t'stack',\n\t'message',\n\t'name',\n])\n\ninterface ErrorCreationAttributes extends XXError {\n\t[k: string]: any\n}\nfunction createError(message: string, attributes: Partial<ErrorCreationAttributes> = {}, ctor = Error): XXError {\n\tmessage = String(message || attributes.message || 'Unknown error!')\n\tif (!(message.toLowerCase()).includes('error')) {\n\t\tif (ctor.name?.endsWith('Error'))\n\t\t\tmessage = ctor.name + ': ' + message\n\t\telse\n\t\t\tmessage = 'Error: ' + message\n\t}\n\n\tlet err: XXError = (new ctor(message)) as any\n\n\tObject.keys(attributes).forEach(k => {\n\t\tconst isErrorAttribute = COMMON_ERROR_FIELDS_EXTENDED.has(k as keyof XXError)\n\t\tconst isAutogeneratedErrorAttribute = AUTOGENERATED_ERROR_FIELDS.has(k as keyof XError)\n\t\tif (k === 'details') {\n\t\t\terr.details = {\n\t\t\t\t...err.details,\n\t\t\t\t...attributes[k],\n\t\t\t}\n\t\t}\n\t\telse if (isAutogeneratedErrorAttribute) {\n\t\t\t// strange...\n\t\t\t// ignore, don't allow overriding auto-generated props\n\t\t}\n\t\telse if (isErrorAttribute) {\n\t\t\t// attach directly\n\t\t\t;(err as any)[k] = attributes[k]\n\t\t}\n\t\telse {\n\t\t\terr.details = err.details || {}\n\t\t\terr.details[k] = attributes[k]\n\t\t}\n\t})\n\terr.framesToPop = (err.framesToPop || 0) + 1\n\n\treturn err\n}\n\n/////////////////////////////////////////////////\n\nexport {\n\ttype ErrorCreationAttributes,\n\n\tcreateError,\n}\n","import { XXError, isꓽError } from './types.js'\nimport { COMMON_ERROR_FIELDS_EXTENDED } from './fields.js'\n\n/////////////////////////////////////////////////\n\nconst DEBUG = false\nconst WARN_NON_ERROR_THROWN = true\n\n\n// Normalize any thrown object into a true, normal error.\n// NOTE: will *always* recreate the error. TODO evaluate if possible to improve?\n// Anything can be thrown: undefined, string, number...\n// But that's obviously not a good practice.\n// Even Error-like objects are sometime fancy!\n// - seen: in browser, sometimes, an error-like, un-writable object is thrown\n// - seen: frozen\n// - seen: non-enumerable props\n// So we want to ensure a true, safe, writable error object.\nfunction normalizeError(err_like: Readonly<Partial<Error>> | unknown = undefined as unknown, { alwaysRecreate = false }: { alwaysRecreate?: boolean } = {}): XXError {\n\tconst hasꓽminimal_error_shape = isꓽError(err_like)\n\n\t// TODO should we normalize \"cause\" as well?\n\n\tif (hasꓽminimal_error_shape && !alwaysRecreate) {\n\t\t// shortcut for most of the time\n\t\treturn err_like as any\n\t}\n\tif (!hasꓽminimal_error_shape) {\n\t\tWARN_NON_ERROR_THROWN && console.warn(`WARNING: normalizeError() saw a non-Error thing thrown!`, { err_like })\n\t}\n\n\tif (err_like === undefined || err_like === null) {\n\t\t// we can't get prototype from those, shortcut it:\n\t\treturn (new Error(`[non-error: \"${err_like}\" thrown!]`)) as any\n\t}\n\n\t// just for a clearer message\n\tif (typeof err_like === 'string') {\n\t\treturn new Error(`[non-error of type \"${typeof err_like}\" thrown: \"${err_like}\"!]`) as any\n\t}\n\telse if (typeof err_like !== 'object') {\n\t\t// we can't get prototype from those, shortcut it:\n\t\treturn new Error(`[non-error of type \"${typeof err_like}\" thrown!]`) as any\n\t}\n\n\ttry {\n\t\tconst should_recreate = alwaysRecreate || !hasꓽminimal_error_shape\n\n\t\tconst true_err: XXError = should_recreate\n\t\t\t? (() => {\n\t\t\t\tconst true_err: XXError = (() => {\n\n\t\t\t\t\tlet message = (err_like as any)?.message // even no error shape may have a message prop\n\t\t\t\t\t\t? String((err_like as any).message)\n\t\t\t\t\t\t: `[object with no error shape thrown!]`\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst current_prototype = Object.getPrototypeOf(err_like)\n\t\t\t\t\t\t// should we restrict to global standard constructors? TBD\n\t\t\t\t\t\tconst wanted_constructor = (current_prototype?.constructor?.name?.endsWith('Error')) ? current_prototype.constructor : Error\n\t\t\t\t\t\t// https://stackoverflow.com/questions/1606797/use-of-apply-with-new-operator-is-this-possible\n\t\t\t\t\t\tconst candidate: XXError = new (Function.prototype.bind.call(wanted_constructor, null, message))\n\t\t\t\t\t\tif (!isꓽError(candidate)) throw new Error('[re-created but still !hasꓽminimal_error_shape: will be caught below]')\n\n\t\t\t\t\t\treturn candidate\n\t\t\t\t\t}\n\t\t\t\t\tcatch (_err) {\n\t\t\t\t\t\tDEBUG && console.error('NE1', _err)\n\t\t\t\t\t\t// the constructor didn't work or didn't yield a proper error, fallback to a normal, safe Error\n\t\t\t\t\t\tconst true_err: XXError = new Error(message) as any\n\t\t\t\t\t\treturn true_err\n\t\t\t\t\t}\n\t\t\t\t})()\n\n\t\t\t\t// properly re-attach fields if they exist\n\t\t\t\t// and normalize them if well defined and important enough\n\t\t\t\tCOMMON_ERROR_FIELDS_EXTENDED.forEach(prop => {\n\t\t\t\t\tif ((err_like as any)[prop]) {\n\t\t\t\t\t\tswitch(prop) {\n\t\t\t\t\t\t\tcase 'message':\n\t\t\t\t\t\t\t\t// this prop is from the constructor, no need to copy it\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tcase 'name':\n\t\t\t\t\t\t\t\t// this prop is from the constructor, no need to copy it\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tcase 'framesToPop':\n\t\t\t\t\t\t\t\t// normalization recommended for processing the stack properly\n\t\t\t\t\t\t\t\t(true_err as any)[prop] = Number.parseInt((err_like as any)[prop])\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t// TODO consider deep copies?\n\t\t\t\t\t\t\t\t(true_err as any)[prop] = (err_like as any)[prop]\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\treturn true_err\n\t\t\t})()\n\t\t\t: err_like as any\n\n\t\treturn true_err\n\t}\n\tcatch (_err) {\n\t\tDEBUG && console.error('NE2', _err)\n\t\tWARN_NON_ERROR_THROWN && console.warn(`WARNING: normalizeError() saw a dangerous thing thrown!`, { err_like })\n\t\t// if we're here, that means that err_like is *very* fancy, better not probe out further.\n\t\treturn new Error(`[non-error: <fancy object> thrown!]`) as any\n\t}\n}\n\n/////////////////////////////////////////////////\n\nexport {\n\tnormalizeError,\n}\n","\n/////////////////////\n\nfunction create(parent_state) {\n\tconst details = parent_state\n\t\t? Object.create(parent_state.details)\n\t\t: Object.create(null) // NO auto-details here, let's keep it simple + usually shared with analytics. See core or platform specific code.\n\n\treturn {\n\t\tdetails,\n\t}\n}\n\n\nfunction addDetail(state, key, value) {\n\tconst { details } = state\n\n\tdetails[key] = value\n\n\treturn {\n\t\t...state,\n\t\tdetails,\n\t}\n}\n\n/////////////////////\n\nexport {\n\tcreate,\n\taddDetail,\n}\n","export function _create_catcher({decorators = [], onError, debugId = '?'} = {}) {\n\n\treturn (err) => {\n\t\t//console.info(`[catchFactory from ${debugId}]`)\n\n\t\terr = decorators.reduce((err, decorator) => {\n\t\t\ttry {\n\t\t\t\terr = decorator(err)\n\t\t\t\tif (!err.message)\n\t\t\t\t\tthrow new Error()\n\t\t\t}\n\t\t\tcatch (decoratorErr) {\n\t\t\t\t/* eslint-disable no-console */\n\t\t\t\tconsole.error(`catchFactory exec from ${debugId}: bad decorator!`, {\n\t\t\t\t\terr,\n\t\t\t\t\tdecoratorErr,\n\t\t\t\t\t'decorator.name': decorator.name,\n\t\t\t\t})\n\t\t\t\t/* eslint-enable no-console */\n\t\t\t}\n\t\t\treturn err\n\t\t}, err)\n\n\t\tif (onError)\n\t\t\treturn onError(err)\n\n\t\tthrow err // or rethrow since still unhandled\n\t}\n}\n","import { getꓽUTC_timestamp‿ms } from '@offirmo-private/timestamps'\n\nimport { INTERNAL_PROP } from '../../consts.js'\nimport * as TopState from '../../state.js'\nimport { flattenToOwn } from '../../utils.js'\nimport * as State from './state.js'\nimport {PLUGIN_ID as ID_DI} from '../dependency-injection/index.js'\n\nconst PLUGIN_ID = 'analytics'\n\nconst PLUGIN = {\n\tid: PLUGIN_ID,\n\tstate: State,\n\taugment: prototype => {\n\n\t\tprototype.setAnalyticsDetails = function setAnalyticsDetails(details) {\n\t\t\tconst SXC = this\n\t\t\tlet root_state = SXC[INTERNAL_PROP]\n\n\t\t\troot_state = TopState.reduce_plugin(root_state, PLUGIN_ID, plugin_state => {\n\t\t\t\tObject.entries(details).forEach(([key, value]) => {\n\t\t\t\t\tplugin_state = State.addDetail(plugin_state, key, value)\n\t\t\t\t})\n\t\t\t\treturn plugin_state\n\t\t\t})\n\n\t\t\tthis[INTERNAL_PROP] = root_state\n\n\t\t\treturn SXC // for chaining\n\t\t}\n\t\tprototype.getAnalyticsDetails = function getAnalyticsDetails() {\n\t\t\tconst SXC = this\n\t\t\tconst plugin_state = SXC[INTERNAL_PROP].plugins[PLUGIN_ID]\n\n\t\t\treturn flattenToOwn(plugin_state.details)\n\t\t}\n\n\t\tprototype.fireAnalyticsEvent = function fireAnalyticsEvent(eventId, details = {}) {\n\t\t\tconst SXC = this\n\t\t\tconst now = getꓽUTC_timestamp‿ms()\n\t\t\tconst root_state = SXC[INTERNAL_PROP]\n\n\t\t\tif (!eventId)\n\t\t\t\tthrow new Error('Incorrect eventId!')\n\n\t\t\tconst { ENV } = SXC.getInjectedDependencies()\n\n\t\t\tconst autoDetails = {\n\t\t\t\tENV,\n\t\t\t\tTIME: now,\n\t\t\t\tSESSION_DURATION_MS: now - root_state.plugins[ID_DI].context.SESSION_START_TIME_MS,\n\t\t\t}\n\t\t\tconst userDetails = SXC.getAnalyticsDetails()\n\t\t\tdetails = {\n\t\t\t\t...autoDetails,\n\t\t\t\t...userDetails,\n\t\t\t\t...details,\n\t\t\t}\n\n\t\t\tSXC.emitter.emit('analytics', { SXC, eventId, details })\n\n\t\t\treturn SXC // for chaining\n\t\t}\n\t},\n}\n\nexport {\n\tPLUGIN_ID,\n\tPLUGIN,\n}\n","\nfunction create(parent_state) {\n\tconst details = parent_state\n\t\t? Object.create(parent_state.details)\n\t\t: Object.create(null) // NO auto-details here, let's keep it simple. See core or platform specific code.\n\n\treturn {\n\t\tdetails,\n\t}\n}\n\nfunction addDetail(state, key, value) {\n\tconst { details } = state\n\n\tdetails[key] = value\n\n\treturn {\n\t\t...state,\n\t\tdetails,\n\t}\n}\n\n/////////////////////\n\nexport {\n\tcreate,\n\taddDetail,\n}\n","import { getꓽUTC_timestamp‿ms } from '@offirmo-private/timestamps'\n\nimport { SoftExecutionContext } from './types.js'\n\n/////////////////////////////////////////////////\n\nfunction decorateWithDetectedEnv(SXC: SoftExecutionContext<any>) {\n\tconst ENV = (() => {\n\t\ttry {\n\t\t\tif (typeof process !== 'undefined' && typeof process.env.NODE_ENV === 'string')\n\t\t\t\treturn process.env.NODE_ENV\n\t\t}\n\t\tcatch (err) {\n\t\t\t/* swallow */\n\t\t}\n\n\t\treturn 'development'\n\t})()\n\n\tconst IS_DEV_MODE = false\n\tconst IS_VERBOSE = false\n\tconst CHANNEL = 'dev'\n\tconst SESSION_START_TIME_MS = getꓽUTC_timestamp‿ms()\n\n\tSXC.injectDependencies({\n\t\tENV,\n\t\t'NODE_ENV': ENV, // yes, intentional 1) ENV = NODE_ENV 2) default value\n\t\tIS_DEV_MODE,\n\t\tIS_VERBOSE,\n\t\tCHANNEL,\n\t\tSESSION_START_TIME_MS,\n\t})\n\n\tSXC.setAnalyticsAndErrorDetails({\n\t\tENV,\n\t\tCHANNEL,\n\t})\n}\n\n/////////////////////////////////////////////////\n\nexport {\n\tdecorateWithDetectedEnv,\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n"],"names":["modules","entry","mainEntry","parcelRequireName","globalName","globalObject","globalThis","self","window","global","previousRequire","cache","nodeRequire","module","require","bind","newRequire","name","jumped","currentRequire","err","Error","code","localRequire","resolve","x","id","Module","call","exports","res","isParcelRequire","moduleName","bundle","parent","register","Object","defineProperty","get","i","length","parcelHelpers","defineInteropFlag","_typesJs","exportAll","_rootJs","_coreJs","_utilsJs","export","getRootSXC","_test_only__reset_root_SXC","global_this","__global_root_sec","_createSXC","isSXC","_constsJs","_rootPrototypeJs","_stateJs","_indexJs","_commonJs","SXC","INTERNAL_PROP","args","LIB","unhandled_args","keys","create","ROOT_PROTOTYPE","parent_state","undefined","state","filter","arg","PLUGINS","forEach","PLUGIN","activate_plugin","injectDependencies","logger","console","decorateWithDetectedEnv","join","createChild","augment","_emittery","_emitteryDefault","interopDefault","emitter","default","setAnalyticsAndErrorDetails","details","setAnalyticsDetails","setErrorDetails","_mapsJs","anyProducer","Symbol","resolvedPromise","Promise","listenerAdded","listenerRemoved","canEmitMetaEvents","isGlobalDebugEnabled","isEventKeyType","key","assertEventName","eventName","TypeError","assertListener","listener","getListeners","instance","events","eventsMap","has","getEventProducers","producers","producersMap","iterator","eventNames","Array","isArray","isFinished","flush","queue","producer","enqueue","item","push","finish","set","Set","add","next","done","value","shift","return","delete","size","arguments","asyncIterator","defaultMethodNamesOrAssert","methodNames","allEmitteryMethods","methodName","includes","isMetaEvent","emitMetaEvent","eventData","emit","Emittery","mixin","emitteryPropertyName","target","prototype","enumerable","emitteryMethodCaller","isDebugEnabled","process","env","DEBUG","newValue","constructor","options","anyMap","Map","debug","enabled","type","debugName","JSON","stringify","toString","currentTime","Date","logTime","getHours","getMinutes","getSeconds","getMilliseconds","log","logIfDebugEnabled","on","off","once","off_","promise","data","enqueueProducers","all","listeners","anyListeners","staticListeners","staticAnyListeners","map","emitSerial","onAny","offAny","anyEvent","clearListeners","clear","entries","listenerCount","count","values","bindMethods","getOwnPropertyNames","v","writable","configurable","WeakMap","reduce_plugin","instance_count","sid","plugins","plugin_parent_state","plugin_state","PLUGIN_ID","reducer","initial_plugin_state","new_plugin_state","PLUGINS_BY_ID","_indexJs1","_indexJs2","_indexJs3","_constsJs1","_stateJs1","BRANCH_JUMP_PSEUDO_STATE","stack","operation","LOGICAL_STACK_SEPARATOR_NON_ADJACENT","_reduceStatePathToLogicalStack","statePath","current_module","reduce","LOGICAL_STACK_SEPARATOR","LOGICAL_STACK_OPERATION_MARKER","LOGICAL_STACK_END_MARKER","setLogicalStack","root_state","set_module","set_operation","getLogicalStack","_getSXCStatePath","getShortLogicalStack","LOGICAL_STACK_BEGIN_MARKER","_decorateErrorWithLogicalStack","_temp","logicalStack","full","other_path","current_path","last_common_index","improvedStatePath","concat","slice","short","message","startsWith","warn","original_message","expected_first_line_of_the_stack","LOGICAL_STACK_MODULE_MARKER","flattenToOwn","_flattenSXC","object","property","path","unshift","analytics","dependency_injection","context","error_handling","logical_stack","deps","getInjectedDependencies","_promiseTry","_timestamps","_errorUtils","_catchFactoryJs","_handleError","debugId","shouldRethrow","_create_catcher","decorators","normalizeError","alwaysRecreate","_decorateErrorWithDetails","onError","now","getꓽUTC_timestamp‿ms","autoDetails","ENV","TIME","SESSION_DURATION_MS","SESSION_START_TIME_MS","userDetails","addDetail","getErrorDetails","createError","framesToPop","handleError","xTry","fn","assert","params","xTryCatch","xNewPromise","resolver_fn","catch","xPromiseTry","promiseTry","then","getꓽUTC_timestampⵧhuman_readable‿days","YYYY","getUTCFullYear","MM","String","getUTCMonth","padStart","DD","getUTCDate","getꓽUTC_timestampⵧhuman_readable‿minutes","hh","getUTCHours","mm","getUTCMinutes","getꓽUTC_timestampⵧhuman_readable‿seconds","ss","getUTCSeconds","getꓽUTC_timestampⵧhuman_readable‿ms","mmm","getUTCMilliseconds","getꓽISO8601ⵧextended‿ms","toISOString","getꓽISO8601ⵧsimplified‿minutes","getꓽISO8601ⵧsimplified‿days","TEST_TIMESTAMP_MS","_fieldsJs","_utilCreateJs","_utilNormalizeJs","_utilTryOrFallbackJs","isꓽError","err_like","STRICT_STANDARD_ERROR_FIELDS","QUASI_STANDARD_ERROR_FIELDS","COMMON_ERROR_FIELDS","COMMON_ERROR_FIELDS_EXTENDED","AUTOGENERATED_ERROR_FIELDS","attributes","ctor","toLowerCase","endsWith","k","isErrorAttribute","isAutogeneratedErrorAttribute","hasꓽminimal_error_shape","should_recreate","true_err","current_prototype","getPrototypeOf","wanted_constructor","candidate","Function","_err","prop","Number","parseInt","decorator","decoratorErr","error","getAnalyticsDetails","fireAnalyticsEvent","eventId","IS_DEV_MODE","IS_VERBOSE","CHANNEL","cachedSetTimeout","cachedClearTimeout","currentQueue","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","e","clearTimeout","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","len","run","runClearTimeout","marker","Item","array","noop","nextTick","apply","title","browser","argv","version","versions","addListener","removeListener","removeAllListeners","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask"],"version":3,"file":"02-sxc.c2e85f0e.js.map"}