{"mappings":"C,A,S,C,C,C,C,C,C,C,C,C,E,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,A,Y,O,C,C,E,E,C,C,E,C,E,E,K,E,C,E,E,A,a,O,Q,A,Y,O,O,O,E,O,O,C,I,C,Q,S,E,C,C,C,E,G,C,C,C,E,C,C,G,C,C,C,E,C,C,I,E,A,Y,O,C,C,E,E,C,C,E,C,G,C,G,E,O,E,E,C,G,G,E,O,E,E,C,G,G,G,A,U,O,E,O,E,G,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,O,C,S,C,E,I,E,C,C,E,C,E,C,E,C,O,A,M,E,E,C,E,E,K,C,C,E,I,E,C,C,E,C,I,E,M,C,G,C,C,E,C,E,C,I,C,E,O,C,E,E,E,O,C,I,C,C,O,C,C,E,C,O,C,S,E,C,E,I,E,E,O,C,G,M,A,C,I,E,C,E,E,E,C,C,E,e,C,C,E,E,M,C,S,C,E,I,C,E,C,E,I,C,M,C,E,I,C,O,C,C,C,E,E,O,C,E,E,K,C,E,E,M,C,E,E,Q,C,S,C,C,C,E,C,C,E,C,C,S,C,C,C,E,E,O,C,C,E,C,E,A,E,O,c,C,E,O,C,I,W,O,C,C,E,A,C,G,C,C,E,C,E,I,I,E,E,E,E,M,C,I,E,C,C,E,C,E,C,M,C,S,C,C,C,C,C,E,I,E,E,kD,E,iB,C,GCAA,IAAA,EAAA,EAAA,oDAEA,EAAA,EAAA,gBACA,EAAA,EAAA,+BACA,EAAA,EAAA,0BACA,EAAA,EAAA,yB,E,E,c,C,GAIA,eAAe,IACd,IAAM,EAAU,AAAA,CAAA,EAAA,EAAA,UAAU,AAAV,IAEhB,AAAA,CAAA,EAAA,EAAA,uBAAuB,AAAvB,EAAwB,GAExB,EAAQ,eAAe,CAAC,CAAE,OAAQ,EAAA,GAAE,AAAE,GAEtC,EAAQ,kBAAkB,CAAC,CAC1B,OAAA,EAAA,OAAK,CACL,QAAA,EAAA,OAAM,CACN,QAAA,EAAA,OAAM,AACP,GAEA,EAAQ,2BAA2B,CAAC,CACnC,QAAA,EAAA,OAAM,CACN,QAAA,EAAA,OAAM,AACP,GAEA,EAAQ,IAAI,CAAC,WAAY,CAAC,CAAE,OAAA,CAAM,CAAE,IAAA,CAAG,CAAE,IACxC,EAAO,KAAK,CAAC,+CACb,EAAO,KAAK,CAAC,+CAAgD,EAAI,mBAAmB,IACpF,EAAO,KAAK,CAAC,+CAAgD,EAC9D,GAEA,GAAM,CAAE,IAAA,CAAG,CAAE,CAAG,EAAQ,uBAAuB,EAC3C,CAAA,eAAA,GACH,AAAA,CAAA,EAAA,EAAA,OAAM,AAAN,EAAO,KAAK,CAAC,0BAA2B,CAAE,UAAW,EAAK,uBAAA,YAA6C,EAEzG,CAIe,EAAA,OAAA,CAAA,C,E,C,mD,Q,e,Q,8B,Q,yB,Q,wB,Q,iD,O,E,C,M,C,S,C,C,C,C,C,E,I,E,E,kD,E,iB,C,GCvCF,EAAA,MAAA,CAAA,EAAA,UAAA,IAAA,GACA,EAAA,MAAA,CAAA,EAAA,kBAAA,IAAA,GACA,EAAA,MAAA,CAAA,EAAA,aAAA,IAAA,GAFN,IAAM,EAAkB,QAClB,EAA0B,KAC1B,EAAqB,gB,E,C,iD,O,E,C,Q,C,S,C,C,C,C,C,E,I,E,E,kD,E,iB,C,GC0ClC,EAAA,MAAA,CAAA,EAAA,UAAA,IAAS,GArCT,IAAM,EAAU,AAAC,CAAA,KAEhB,GAAI,CAAC,OAAO,eAAe,EACvB,AAA6B,WAA7B,OAAO,QAAQ,CAAC,QAAQ,EACxB,OAAO,QAAQ,CAAC,IAAI,EAGH,CAAC,YAAa,UAAW,OAAQ,UAAU,CAAC,IAAI,CAAC,AAAA,GACrE,OAAO,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAGT,CAAC,kBAAmB,kBAAmB,aAAc,aAAa,CAAC,IAAI,CAAC,AAAA,GACjG,OAAO,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAGJ,CAAC,oBAAoB,CAAC,IAAI,CAAC,AAAA,GAAU,OAAO,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAbzE,MAAO,MAiBpC,GAAI,OAAO,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,iBAClC,OAAO,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,eAClC,OAAO,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,eAClC,OAAO,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,mBAHiB,MAAO,UAM9D,IAAM,EAAoB,IAAI,IAhCT,8DAiCrB,AAAI,OAAO,QAAQ,CAAC,QAAQ,GAAK,EAAkB,QAAQ,CAAS,OAM7D,KACR,CAAA,G,E,C,iD,O,E,E,E,C,E","sources":["<anon>","5-incubator/active/pwa-debugger/src/app/init/02-sxc.ts","5-incubator/active/pwa-debugger/src/entry-points/build.ts","5-incubator/active/pwa-debugger/src/app/services/channel.ts"],"sourcesContent":["// modules are defined as an array\n// [ module function, map of requires ]\n//\n// map of requires is short require name -> numeric require\n//\n// anything defined in a previous bundle is accessed via the\n// orig method which is the require for previous bundles\n\n(function (modules, entry, mainEntry, parcelRequireName, globalName) {\n  /* eslint-disable no-undef */\n  var globalObject =\n    typeof globalThis !== 'undefined'\n      ? globalThis\n      : typeof self !== 'undefined'\n      ? self\n      : typeof window !== 'undefined'\n      ? window\n      : typeof global !== 'undefined'\n      ? global\n      : {};\n  /* eslint-enable no-undef */\n\n  // Save the require from previous bundle to this closure if any\n  var previousRequire =\n    typeof globalObject[parcelRequireName] === 'function' &&\n    globalObject[parcelRequireName];\n\n  var cache = previousRequire.cache || {};\n  // Do not use `require` to prevent Webpack from trying to bundle this call\n  var nodeRequire =\n    typeof module !== 'undefined' &&\n    typeof module.require === 'function' &&\n    module.require.bind(module);\n\n  function newRequire(name, jumped) {\n    if (!cache[name]) {\n      if (!modules[name]) {\n        // if we cannot find the module within our internal map or\n        // cache jump to the current global require ie. the last bundle\n        // that was added to the page.\n        var currentRequire =\n          typeof globalObject[parcelRequireName] === 'function' &&\n          globalObject[parcelRequireName];\n        if (!jumped && currentRequire) {\n          return currentRequire(name, true);\n        }\n\n        // If there are other bundles on this page the require from the\n        // previous one is saved to 'previousRequire'. Repeat this as\n        // many times as there are bundles until the module is found or\n        // we exhaust the require chain.\n        if (previousRequire) {\n          return previousRequire(name, true);\n        }\n\n        // Try the node require function if it exists.\n        if (nodeRequire && typeof name === 'string') {\n          return nodeRequire(name);\n        }\n\n        var err = new Error(\"Cannot find module '\" + name + \"'\");\n        err.code = 'MODULE_NOT_FOUND';\n        throw err;\n      }\n\n      localRequire.resolve = resolve;\n      localRequire.cache = {};\n\n      var module = (cache[name] = new newRequire.Module(name));\n\n      modules[name][0].call(\n        module.exports,\n        localRequire,\n        module,\n        module.exports,\n        this\n      );\n    }\n\n    return cache[name].exports;\n\n    function localRequire(x) {\n      var res = localRequire.resolve(x);\n      return res === false ? {} : newRequire(res);\n    }\n\n    function resolve(x) {\n      var id = modules[name][1][x];\n      return id != null ? id : x;\n    }\n  }\n\n  function Module(moduleName) {\n    this.id = moduleName;\n    this.bundle = newRequire;\n    this.exports = {};\n  }\n\n  newRequire.isParcelRequire = true;\n  newRequire.Module = Module;\n  newRequire.modules = modules;\n  newRequire.cache = cache;\n  newRequire.parent = previousRequire;\n  newRequire.register = function (id, exports) {\n    modules[id] = [\n      function (require, module) {\n        module.exports = exports;\n      },\n      {},\n    ];\n  };\n\n  Object.defineProperty(newRequire, 'root', {\n    get: function () {\n      return globalObject[parcelRequireName];\n    },\n  });\n\n  globalObject[parcelRequireName] = newRequire;\n\n  for (var i = 0; i < entry.length; i++) {\n    newRequire(entry[i]);\n  }\n\n  if (mainEntry) {\n    // Expose entry point to Node, AMD or browser globals\n    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js\n    var mainExports = newRequire(mainEntry);\n\n    // CommonJS\n    if (typeof exports === 'object' && typeof module !== 'undefined') {\n      module.exports = mainExports;\n\n      // RequireJS\n    } else if (typeof define === 'function' && define.amd) {\n      define(function () {\n        return mainExports;\n      });\n\n      // <script>\n    } else if (globalName) {\n      this[globalName] = mainExports;\n    }\n  }\n})({\"ePahw\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nvar _softExecutionContextBrowser = require(\"@offirmo-private/soft-execution-context--browser\");\nvar _constsTs = require(\"../consts.ts\");\nvar _buildTs = require(\"../../entry-points/build.ts\");\nvar _channelTs = require(\"../services/channel.ts\");\nvar _loggerTs = require(\"../services/logger.ts\");\nvar _loggerTsDefault = parcelHelpers.interopDefault(_loggerTs);\n/////////////////////////////////////////////////\nasync function init() {\n    const rootSXC = (0, _softExecutionContextBrowser.getRootSXC)();\n    (0, _softExecutionContextBrowser.decorateWithDetectedEnv)(rootSXC);\n    rootSXC.setLogicalStack({\n        module: (0, _constsTs.LIB)\n    });\n    rootSXC.injectDependencies({\n        logger: (0, _loggerTsDefault.default),\n        CHANNEL: (0, _channelTs.CHANNEL),\n        VERSION: (0, _buildTs.VERSION)\n    });\n    rootSXC.setAnalyticsAndErrorDetails({\n        VERSION: (0, _buildTs.VERSION),\n        CHANNEL: (0, _channelTs.CHANNEL)\n    });\n    rootSXC.xTry(\"init:SXC\", ({ logger, SXC })=>{\n        logger.debug(\"\\u250C Root SXC is now decorated with a logger \\u2714\");\n        logger.debug(\"\\u251C Root SXC is now decorated with env infos \\u2714\", SXC.getAnalyticsDetails());\n        logger.debug(\"\\u2514\\u25BA Root Soft Execution Context initialized \\u2714\", rootSXC);\n    });\n    const { ENV } = rootSXC.getInjectedDependencies();\n    if (ENV !== \"production\") (0, _loggerTsDefault.default).error(\"ENV detection mismatch!\", {\n        \"SXC.ENV\": ENV,\n        \"process.env.NODE_ENV\": \"production\"\n    });\n}\n/////////////////////////////////////////////////\nexports.default = init;\n\n},{\"@offirmo-private/soft-execution-context--browser\":\"eXTgB\",\"../consts.ts\":\"4GFnz\",\"../../entry-points/build.ts\":\"coOYO\",\"../services/channel.ts\":\"2JNdm\",\"../services/logger.ts\":\"26tYz\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"fCxzd\"}],\"coOYO\":[function(require,module,exports) {\n// THIS FILE IS AUTO GENERATED!\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"VERSION\", ()=>VERSION);\nparcelHelpers.export(exports, \"NUMERIC_VERSION\", ()=>NUMERIC_VERSION);\nparcelHelpers.export(exports, \"BUILD_DATE\", ()=>BUILD_DATE);\nconst VERSION = \"0.0.1\";\nconst NUMERIC_VERSION = 0.0001 // for easy comparisons\n;\nconst BUILD_DATE = \"20240605_10h44\";\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"fCxzd\"}],\"2JNdm\":[function(require,module,exports) {\n/////////////////////////////////////////////////\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\n/////////////////////////////////////////////////\nparcelHelpers.export(exports, \"CHANNEL\", ()=>CHANNEL);\nconst URL\\u2D67CANONICAL = \"https://www.online-adventur.es/apps/the-boring-rpg/\";\n/////////////////////////////////////////////////\n// prod = full security and reliability\n// staging = close to prod, usually only difference is the data storage = different from prod\n// dev = anything else\nconst CHANNEL = (()=>{\n    // first weed out obvious dev cases\n    if (!window.isSecureContext) return \"dev\";\n    if (window.location.protocol !== \"https:\") return \"dev\";\n    if (window.location.port) return \"dev\";\n    // then detect common \"local\" dev setups\n    const is\\uA4FDlocalhost = [\n        \"localhost\",\n        \"example\",\n        \"test\",\n        \"invalid\"\n    ].some((domain)=>window.location.hostname.endsWith(domain)) // https://en.wikipedia.org/wiki/.localhost\n    ;\n    if (is\\uA4FDlocalhost) return \"dev\";\n    const is\\uA4FDtunneled\\u2D67ngrok = [\n        \".ngrok-free.app\",\n        \".ngrok-free.dev\",\n        \".ngrok.app\",\n        \".ngrok.dev\"\n    ].some((domain)=>window.location.hostname.endsWith(domain)) // https://ngrok.com/blog-post/new-ngrok-domains\n    ;\n    if (is\\uA4FDtunneled\\u2D67ngrok) return \"dev\";\n    const is\\uA4FDtunneled\\u2D67cloudflare = [\n        \".cfargotunnel.com\"\n    ].some((domain)=>window.location.hostname.endsWith(domain)) // https://developers.cloudflare.com/cloudflare-one/faq/cloudflare-tunnels-faq/\n    ;\n    if (is\\uA4FDtunneled\\u2D67cloudflare) return \"dev\";\n    // then detect common \"hosted\" locations, which mean staging\n    if (window.location.hostname.endsWith(\".netlify.app\")) return \"staging\";\n    if (window.location.hostname.endsWith(\".github.io\")) return \"staging\";\n    if (window.location.hostname.endsWith(\".pages.dev\")) return \"staging\" // cloudflare\n    ;\n    if (window.location.hostname.endsWith(\".cloudfront.net\")) return \"staging\" // AWS\n    ;\n    // finally, does it match the expected canonical URL?\n    const URL\\u2D67CANONICAL\\u203Fobj = new URL(URL\\u2D67CANONICAL);\n    if (window.location.hostname === URL\\u2D67CANONICAL\\u203Fobj.hostname) return \"prod\";\n    // TODO cordova\n    // TODO itch.io\n    // everything else is unknown = unsafe\n    return \"dev\";\n})();\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"fCxzd\"}]},[], null, \"parcelRequire375b\")\n\n//# sourceMappingURL=02-sxc.a3468c8f.js.map\n","import { getRootSXC, decorateWithDetectedEnv } from '@offirmo-private/soft-execution-context--browser'\n\nimport { LIB } from '../consts.ts'\nimport { VERSION } from '../../entry-points/build.ts'\nimport { CHANNEL } from '../services/channel.ts'\nimport logger from '../services/logger.ts'\n\n/////////////////////////////////////////////////\n\nasync function init(): Promise<void> {\n\tconst rootSXC = getRootSXC()\n\n\tdecorateWithDetectedEnv(rootSXC)\n\n\trootSXC.setLogicalStack({ module: LIB })\n\n\trootSXC.injectDependencies({\n\t\tlogger,\n\t\tCHANNEL,\n\t\tVERSION,\n\t})\n\n\trootSXC.setAnalyticsAndErrorDetails({\n\t\tVERSION,\n\t\tCHANNEL,\n\t})\n\n\trootSXC.xTry('init:SXC', ({ logger, SXC }) => {\n\t\tlogger.debug('┌ Root SXC is now decorated with a logger ✔')\n\t\tlogger.debug('├ Root SXC is now decorated with env infos ✔', SXC.getAnalyticsDetails())\n\t\tlogger.debug('└► Root Soft Execution Context initialized ✔', rootSXC)\n\t})\n\n\tconst { ENV } = rootSXC.getInjectedDependencies()\n\tif (ENV !== process.env.NODE_ENV) {\n\t\tlogger.error('ENV detection mismatch!', { 'SXC.ENV': ENV, 'process.env.NODE_ENV': process.env.NODE_ENV })\n\t}\n}\n\n/////////////////////////////////////////////////\n\nexport default init\n","\n// THIS FILE IS AUTO GENERATED!\nexport const VERSION: string = '0.0.1'\nexport const NUMERIC_VERSION: number = 0.0001 // for easy comparisons\nexport const BUILD_DATE: string = '20240605_10h44'\n","/////////////////////////////////////////////////\n\nconst URLⵧCANONICAL = 'https://www.online-adventur.es/apps/the-boring-rpg/'\n\n/////////////////////////////////////////////////\n\n// prod = full security and reliability\n// staging = close to prod, usually only difference is the data storage = different from prod\n// dev = anything else\nconst CHANNEL = ((): 'prod' | 'staging' | 'dev' => {\n\t// first weed out obvious dev cases\n\tif (!window.isSecureContext) return 'dev'\n\tif (window.location.protocol !== 'https:') return 'dev'\n\tif (window.location.port) return 'dev'\n\n\t// then detect common \"local\" dev setups\n\tconst isꓽlocalhost = ['localhost', 'example', 'test', 'invalid'].some(domain =>\n\t\twindow.location.hostname.endsWith(domain),\n\t) // https://en.wikipedia.org/wiki/.localhost\n\tif (isꓽlocalhost) return 'dev'\n\tconst isꓽtunneledⵧngrok = ['.ngrok-free.app', '.ngrok-free.dev', '.ngrok.app', '.ngrok.dev'].some(domain =>\n\t\twindow.location.hostname.endsWith(domain),\n\t) // https://ngrok.com/blog-post/new-ngrok-domains\n\tif (isꓽtunneledⵧngrok) return 'dev'\n\tconst isꓽtunneledⵧcloudflare = ['.cfargotunnel.com'].some(domain => window.location.hostname.endsWith(domain)) // https://developers.cloudflare.com/cloudflare-one/faq/cloudflare-tunnels-faq/\n\tif (isꓽtunneledⵧcloudflare) return 'dev'\n\n\t// then detect common \"hosted\" locations, which mean staging\n\tif (window.location.hostname.endsWith('.netlify.app')) return 'staging'\n\tif (window.location.hostname.endsWith('.github.io')) return 'staging'\n\tif (window.location.hostname.endsWith('.pages.dev')) return 'staging' // cloudflare\n\tif (window.location.hostname.endsWith('.cloudfront.net')) return 'staging' // AWS\n\n\t// finally, does it match the expected canonical URL?\n\tconst URLⵧCANONICAL‿obj = new URL(URLⵧCANONICAL)\n\tif (window.location.hostname === URLⵧCANONICAL‿obj.hostname) return 'prod'\n\n\t// TODO cordova\n\t// TODO itch.io\n\n\t// everything else is unknown = unsafe\n\treturn 'dev'\n})()\n\n/////////////////////////////////////////////////\n\nexport { CHANNEL }\n"],"names":["modules","entry","mainEntry","parcelRequireName","globalName","globalObject","globalThis","self","window","global","previousRequire","cache","nodeRequire","module","require","bind","newRequire","name","jumped","currentRequire","err","Error","code","localRequire","resolve","x","id","Module","call","exports","res","isParcelRequire","moduleName","bundle","parent","register","Object","defineProperty","get","i","length","parcelHelpers","defineInteropFlag","_softExecutionContextBrowser","_constsTs","_buildTs","_channelTs","_loggerTs","_loggerTsDefault","interopDefault","init","rootSXC","getRootSXC","decorateWithDetectedEnv","setLogicalStack","LIB","injectDependencies","logger","default","CHANNEL","VERSION","setAnalyticsAndErrorDetails","xTry","SXC","debug","getAnalyticsDetails","ENV","getInjectedDependencies","error","export","NUMERIC_VERSION","BUILD_DATE","isSecureContext","location","protocol","port","some","domain","hostname","endsWith","URLⵧCANONICAL‿obj","URL"],"version":3,"file":"02-sxc.a3468c8f.js.map"}